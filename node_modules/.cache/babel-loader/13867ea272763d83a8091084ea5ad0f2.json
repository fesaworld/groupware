{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/checkins-list.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/checkins-list.js","mtime":1673491775271},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvamRzL0RvY3VtZW50cy9kaXNrb21pbmZvL2pkcy9kaWdpdGVhbS9ncm91cHdhcmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfbXV0YXRpb25zOwoKaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vbXV0YXRpb24tdHlwZXMnOwppbXBvcnQgeyBHcm91cHdhcmVBUEkgfSBmcm9tICcuLi8uLi9saWIvYXhpb3MnOyAvLyBzdGF0ZQoKZXhwb3J0IHZhciBzdGF0ZSA9IHsKICBsb2FkaW5nOiB0cnVlLAogIGl0ZW1zOiBbXSwKICBpc0NoZWNraW46IG51bGwsCiAgaXNDaGVja291dDogbnVsbAp9OyAvLyBnZXR0ZXJzCgpleHBvcnQgdmFyIGdldHRlcnMgPSB7CiAgbG9hZGluZzogZnVuY3Rpb24gbG9hZGluZyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxvYWRpbmc7CiAgfSwKICBpdGVtczogZnVuY3Rpb24gaXRlbXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pdGVtczsKICB9Cn07IC8vIG11dGF0aW9ucwoKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuQ0hFQ0tJTlNfSU5JVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUubG9hZGluZyA9IHRydWU7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuQ0hFQ0tJTlNfTE9BREVELCBmdW5jdGlvbiAoc3RhdGUsIF9yZWYpIHsKICB2YXIgaXRlbXMgPSBfcmVmLml0ZW1zOwogIHN0YXRlLml0ZW1zID0gaXRlbXM7CiAgc3RhdGUubG9hZGluZyA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLkNIRUNLSU5fU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSwgaXNDaGVja2luKSB7CiAgc3RhdGUuaXNDaGVja2luID0gISFpc0NoZWNraW47Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuQ0hFQ0tPVVRfU1RBVEUsIGZ1bmN0aW9uIChzdGF0ZSwgaXNDaGVja291dCkgewogIHN0YXRlLmlzQ2hlY2tvdXQgPSAhIWlzQ2hlY2tvdXQ7Cn0pLCBfbXV0YXRpb25zKTsgLy8gYWN0aW9ucwoKZXhwb3J0IHZhciBhY3Rpb25zID0gewogIGZldGNoSXRlbXM6IGZ1bmN0aW9uIGZldGNoSXRlbXMoX3JlZjIpIHsKICAgIHZhciBfYXJndW1lbnRzID0gYXJndW1lbnRzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgX3JlZjMsIGRhdGU7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9yZWYzID0gX2FyZ3VtZW50cy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHNbMV0gOiB7fSwgZGF0ZSA9IF9yZWYzLmRhdGU7CiAgICAgICAgICAgICAgY29tbWl0KHR5cGVzLkNIRUNLSU5TX0lOSVQpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBHcm91cHdhcmVBUEkuZ2V0KCdhdHRlbmRhbmNlLycsIHsKICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICBsaW1pdDogMjAwLAogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogMjAwLAogICAgICAgICAgICAgICAgICBkYXRlOiBkYXRlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocikgewogICAgICAgICAgICAgICAgcmV0dXJuIHIuZGF0YS5yZXN1bHRzOwogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGxpc3QpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCh0eXBlcy5DSEVDS0lOU19MT0FERUQsIHsKICAgICAgICAgICAgICAgICAgaXRlbXM6IGxpc3QKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0Q2hlY2tpblN0YXRlOiBmdW5jdGlvbiBnZXRDaGVja2luU3RhdGUoX3JlZjQpIHsKICAgIHZhciBfYXJndW1lbnRzMiA9IGFyZ3VtZW50czsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgX3JlZjUsIF9yZWY1JHJlZnJlc2gsIHJlZnJlc2g7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGUsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfcmVmNSA9IF9hcmd1bWVudHMyLmxlbmd0aCA+IDEgJiYgX2FyZ3VtZW50czJbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHMyWzFdIDoge30sIF9yZWY1JHJlZnJlc2ggPSBfcmVmNS5yZWZyZXNoLCByZWZyZXNoID0gX3JlZjUkcmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmNSRyZWZyZXNoOwoKICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5pc0NoZWNraW4gPT09IG51bGwgfHwgcmVmcmVzaCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBHcm91cHdhcmVBUEkuZ2V0KCdhdHRlbmRhbmNlL2lzL2NoZWNraW4nKS50aGVuKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gci5kYXRhLmlzQ2hlY2tpbjsKICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICh0cnV0aHkpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCh0eXBlcy5DSEVDS0lOX1NUQVRFLCB0cnV0aHkpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5pc0NoZWNraW4pOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBnZXRDaGVja291dFN0YXRlOiBmdW5jdGlvbiBnZXRDaGVja291dFN0YXRlKF9yZWY2KSB7CiAgICB2YXIgX2FyZ3VtZW50czMgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIF9yZWY3LCBfcmVmNyRyZWZyZXNoLCByZWZyZXNoOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWY2LnN0YXRlLCBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICAgICAgICAgICAgX3JlZjcgPSBfYXJndW1lbnRzMy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHMzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJndW1lbnRzM1sxXSA6IHt9LCBfcmVmNyRyZWZyZXNoID0gX3JlZjcucmVmcmVzaCwgcmVmcmVzaCA9IF9yZWY3JHJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjckcmVmcmVzaDsKCiAgICAgICAgICAgICAgaWYgKCEoc3RhdGUuaXNDaGVja291dCA9PT0gbnVsbCB8fCByZWZyZXNoKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIEdyb3Vwd2FyZUFQSS5nZXQoJ2F0dGVuZGFuY2UvaXMvY2hlY2tvdXQnKS50aGVuKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gci5kYXRhLmlzQ2hlY2tvdXQ7CiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAodHJ1dGh5KSB7CiAgICAgICAgICAgICAgICBjb21taXQodHlwZXMuQ0hFQ0tPVVRfU1RBVEUsIHRydXRoeSk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHN0YXRlLmlzQ2hlY2tvdXQpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfSwKICBjaGVja291dDogZnVuY3Rpb24gY2hlY2tvdXQoXywgcGF5bG9hZCkgewogICAgcmV0dXJuIEdyb3Vwd2FyZUFQSS5wb3N0KCdhdHRlbmRhbmNlL2NoZWNrb3V0JywgcGF5bG9hZCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/checkins-list.js"],"names":["types","GroupwareAPI","state","loading","items","isCheckin","isCheckout","getters","mutations","CHECKINS_INIT","CHECKINS_LOADED","CHECKIN_STATE","CHECKOUT_STATE","actions","fetchItems","commit","date","get","params","limit","pageSize","then","r","data","results","list","getCheckinState","refresh","truthy","getCheckoutState","checkout","_","payload","post"],"mappings":"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","sourcesContent":["import * as types from '../mutation-types'\nimport { GroupwareAPI } from '../../lib/axios'\n\n// state\nexport const state = {\n  loading: true,\n  items: [],\n  isCheckin: null,\n  isCheckout: null\n}\n\n// getters\nexport const getters = {\n  loading: state => state.loading,\n  items: state => state.items\n}\n\n// mutations\nexport const mutations = {\n  [types.CHECKINS_INIT] (state) {\n    state.loading = true\n  },\n\n  [types.CHECKINS_LOADED] (state, { items }) {\n    state.items = items\n    state.loading = false\n  },\n\n  [types.CHECKIN_STATE] (state, isCheckin) {\n    state.isCheckin = !!isCheckin\n  },\n  [types.CHECKOUT_STATE] (state, isCheckout) {\n    state.isCheckout = !!isCheckout\n  }\n}\n\n// actions\nexport const actions = {\n  async fetchItems ({ commit }, { date } = {}) {\n    commit(types.CHECKINS_INIT)\n\n    await GroupwareAPI.get('attendance/', {\n      params: {\n        limit: 200,\n        pageSize: 200,\n        date\n      }\n    })\n      .then(r => r.data.results)\n      .then(list => {\n        commit(types.CHECKINS_LOADED, { items: list })\n      })\n  },\n  async getCheckinState ({ state, commit }, { refresh = false } = {}) {\n    if (state.isCheckin === null || refresh) {\n      await GroupwareAPI.get('attendance/is/checkin')\n        .then(r => r.data.isCheckin)\n        .then(truthy => {\n          commit(types.CHECKIN_STATE, truthy)\n        })\n    }\n    return state.isCheckin\n  },\n  async getCheckoutState ({ state, commit }, { refresh = false } = {}) {\n    if (state.isCheckout === null || refresh) {\n      await GroupwareAPI.get('attendance/is/checkout')\n        .then(r => r.data.isCheckout)\n        .then(truthy => {\n          commit(types.CHECKOUT_STATE, truthy)\n        })\n    }\n    return state.isCheckout\n  },\n  checkout (_, payload) {\n    return GroupwareAPI.post('attendance/checkout', payload)\n  }\n}\n"]}]}