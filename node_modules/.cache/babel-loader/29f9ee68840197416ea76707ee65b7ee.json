{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/components/Dashboard/LogbookHeatmaps/MonthlyHeatmap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/components/Dashboard/LogbookHeatmaps/MonthlyHeatmap.vue","mtime":1673491775261},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js","mtime":1673491936504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLm1heC1zYWZlLWludGVnZXIiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvamRzL0RvY3VtZW50cy9kaXNrb21pbmZvL2pkcy9kaWdpdGVhbS9ncm91cHdhcmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgaXNWYWxpZCBmcm9tICdkYXRlLWZucy9pc1ZhbGlkJzsKaW1wb3J0IGZvcm1hdERhdGUgZnJvbSAnZGF0ZS1mbnMvZm9ybWF0JzsKaW1wb3J0IGdldERheXNJbk1vbnRoIGZyb20gJ2RhdGUtZm5zL2dldERheXNJbk1vbnRoJzsKaW1wb3J0IGRpZmZlcmVuY2VJbkRheXMgZnJvbSAnZGF0ZS1mbnMvZGlmZmVyZW5jZUluRGF5cyc7CmltcG9ydCBzdGFydE9mV2VlayBmcm9tICdkYXRlLWZucy9zdGFydE9mV2Vlayc7CmltcG9ydCBnZXRXZWVrc0luTW9udGggZnJvbSAnZGF0ZS1mbnMvZ2V0V2Vla3NJbk1vbnRoJzsKaW1wb3J0IGlzV2Vla2VuZCBmcm9tICdkYXRlLWZucy9pc1dlZWtlbmQnOwppbXBvcnQgaWQgZnJvbSAnZGF0ZS1mbnMvbG9jYWxlL2lkJzsKaW1wb3J0IHsgZm9ybWF0RGF0ZVNob3J0IH0gZnJvbSAnLi4vLi4vLi4vbGliL2RhdGUnOwppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgaW5qZWN0OiB7CiAgICBoZWF0bWFwQ29sb3JDb25maWc6IHsKICAgICAgZnJvbTogJ2hlYXRtYXBDb2xvckNvbmZpZycsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGlzTG9hZGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIG1vbnRoOiB7CiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIHllYXI6IHsKICAgICAgdHlwZTogTnVtYmVyCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVjdEdhcDogNiwKICAgICAgcmVjdFNpemU6IDYwLAogICAgICBkZWZhdWx0Q29sb3I6ICcjRUNFRkYxJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICBpc01vbnRoQW5kWWVhckRlZmluZWQ6IGZ1bmN0aW9uIGlzTW9udGhBbmRZZWFyRGVmaW5lZCgpIHsKICAgICAgdmFyIG1vbnRoID0gdGhpcy5tb250aCwKICAgICAgICAgIHllYXIgPSB0aGlzLnllYXI7CiAgICAgIHZhciBpc051bWJlciA9IHR5cGVvZiBtb250aCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHllYXIgPT09ICdudW1iZXInOwogICAgICB2YXIgaXNWYWxpZERhdGUgPSBpc1ZhbGlkKG5ldyBEYXRlKHllYXIsIG1vbnRoKSk7CiAgICAgIHJldHVybiBpc051bWJlciAmJiBpc1ZhbGlkRGF0ZTsKICAgIH0KICB9LCBtYXBHZXR0ZXJzKCdsb2dib29rLWhlYXRtYXAnLCBbJ2dldFRhc2tDb3VudEJ5RGF0ZSddKSksIG1hcFN0YXRlKCdsb2dib29rLWhlYXRtYXAnLCB7CiAgICBoZWF0bWFwRGF0YTogZnVuY3Rpb24gaGVhdG1hcERhdGEoc3RhdGUpIHsKICAgICAgaWYgKCF0aGlzLmlzTW9udGhBbmRZZWFyRGVmaW5lZCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICB2YXIga2V5ID0gIiIuY29uY2F0KHBhcnNlSW50KHRoaXMueWVhciksICIvIikuY29uY2F0KHBhcnNlSW50KHRoaXMubW9udGgpKTsKICAgICAgcmV0dXJuIHN0YXRlLmRhdGFCeU1vbnRoWWVhcltrZXldIHx8IG51bGw7CiAgICB9CiAgfSkpLCB7fSwgewogICAgc3RhcnRPZk1vbnRoT2Zmc2V0SW5EYXlzOiBmdW5jdGlvbiBzdGFydE9mTW9udGhPZmZzZXRJbkRheXMoKSB7CiAgICAgIGlmICghdGhpcy5pc01vbnRoQW5kWWVhckRlZmluZWQpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQoKICAgICAgdmFyIG1vbnRoU3RhcnQgPSBuZXcgRGF0ZSh0aGlzLnllYXIsIHRoaXMubW9udGgsIDEpOwogICAgICB2YXIgY2FsZW5kYXJTdGFydCA9IHN0YXJ0T2ZXZWVrKG1vbnRoU3RhcnQsIHsKICAgICAgICB3ZWVrU3RhcnRzT246IDEKICAgICAgfSk7CiAgICAgIHJldHVybiBkaWZmZXJlbmNlSW5EYXlzKG1vbnRoU3RhcnQsIGNhbGVuZGFyU3RhcnQpOwogICAgfSwKICAgIG51bU9mV2Vla3M6IGZ1bmN0aW9uIG51bU9mV2Vla3MoKSB7CiAgICAgIGlmICghdGhpcy5pc01vbnRoQW5kWWVhckRlZmluZWQpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFdlZWtzSW5Nb250aChuZXcgRGF0ZSh0aGlzLnllYXIsIHRoaXMubW9udGgpKTsKICAgIH0sCiAgICBudW1PZkRheXM6IGZ1bmN0aW9uIG51bU9mRGF5cygpIHsKICAgICAgaWYgKCF0aGlzLmlzTW9udGhBbmRZZWFyRGVmaW5lZCkgewogICAgICAgIHJldHVybiAwOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0RGF5c0luTW9udGgobmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoKSk7CiAgICB9LAogICAgdmlld0JveFJlY3RTaXplOiBmdW5jdGlvbiB2aWV3Qm94UmVjdFNpemUoKSB7CiAgICAgIC8vIDcgaXMgbWF4aW11bSBudW0gb2Ygd2Vla3MgaW4gbW9udGggKDYpICsgMSBjb2x1bW4gZm9yIGRheSBuYW1lCiAgICAgIHZhciBtYXhOdW1PZkNvbHVtbnMgPSA3OwogICAgICB2YXIgd2lkdGggPSB0aGlzLnJlY3RTaXplICogbWF4TnVtT2ZDb2x1bW5zICsgdGhpcy5yZWN0R2FwICogKG1heE51bU9mQ29sdW1ucyArIDEpOyAvLyA3IGlzIG51bWJlciBvZiBkYXlzIHdpdGhpbiB3ZWVrCiAgICAgIC8vIDggaXMgbnVtYmVyIG9mIGdhcCBmb3IgNyByb3dzCgogICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5yZWN0U2l6ZSAqIDcgKyB0aGlzLnJlY3RHYXAgKiA4OwogICAgICByZXR1cm4gIjAgMCAiLmNvbmNhdCh3aWR0aCwgIiAiKS5jb25jYXQoaGVpZ2h0KTsKICAgIH0sCiAgICBtb250aE5hbWU6IGZ1bmN0aW9uIG1vbnRoTmFtZSgpIHsKICAgICAgcmV0dXJuIGZvcm1hdERhdGUobmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoKSwgJ01NTU0nLCB7CiAgICAgICAgbG9jYWxlOiBpZAogICAgICB9KTsKICAgIH0KICB9KSwKICBtZXRob2RzOiB7CiAgICBnZXREYXlOYW1lOiBmdW5jdGlvbiBnZXREYXlOYW1lKGRheUluZGV4KSB7CiAgICAgIC8vIG1vbmRheSBpcyB6ZXJvIGluIGRhdGUtZm5zCiAgICAgIHZhciBpID0gZGF5SW5kZXggPT09IDcgPyAwIDogZGF5SW5kZXg7CiAgICAgIHJldHVybiBpZC5sb2NhbGl6ZS5kYXkoaSwgewogICAgICAgIHdpZHRoOiAnc2hvcnQnCiAgICAgIH0pOwogICAgfSwKICAgIGdldERheU5hbWVUZXh0WTogZnVuY3Rpb24gZ2V0RGF5TmFtZVRleHRZKGRheUluZGV4KSB7CiAgICAgIHZhciByZWN0WSA9IHRoaXMuZ2V0UmVjdFkoZGF5SW5kZXgpOyAvLyAxMCBpcyBoYWxmIG9mIGZvbnQgc2l6ZQoKICAgICAgcmV0dXJuIDEwICsgcmVjdFkgKyBNYXRoLmZsb29yKHRoaXMucmVjdFNpemUgLyAyKTsKICAgIH0sCiAgICBnZXREYXlOYW1lVGV4dFg6IGZ1bmN0aW9uIGdldERheU5hbWVUZXh0WChkYXlJbmRleCkgewogICAgICByZXR1cm4gMDsKICAgIH0sCiAgICBnZXRSZWN0WTogZnVuY3Rpb24gZ2V0UmVjdFkoaXRlbUluZGV4KSB7CiAgICAgIHJldHVybiB0aGlzLnJlY3RHYXAgKyBpdGVtSW5kZXggJSA3ICogKHRoaXMucmVjdFNpemUgKyB0aGlzLnJlY3RHYXApOwogICAgfSwKICAgIGdldFJlY3RYOiBmdW5jdGlvbiBnZXRSZWN0WChpdGVtSW5kZXgpIHsKICAgICAgdmFyIGNvbE51bSA9IE1hdGguZmxvb3IoaXRlbUluZGV4IC8gNyk7CiAgICAgIHJldHVybiB0aGlzLnJlY3RHYXAgKyBjb2xOdW0gKiAodGhpcy5yZWN0U2l6ZSArIHRoaXMucmVjdEdhcCk7CiAgICB9LAogICAgZ2V0VG9vbHRpcENvbnRlbnRCeURhdGVOdW06IGZ1bmN0aW9uIGdldFRvb2x0aXBDb250ZW50QnlEYXRlTnVtKGRhdGVOdW0pIHsKICAgICAgdmFyIGRhdGVPYmogPSBuZXcgRGF0ZSh0aGlzLnllYXIsIHRoaXMubW9udGgsIGRhdGVOdW0pOwogICAgICB2YXIgZGF0ZVN0cmluZyA9IGZvcm1hdERhdGVTaG9ydChkYXRlT2JqKTsKICAgICAgdmFyIHRhc2tDb3VudCA9IHRoaXMuZ2V0VGFza0NvdW50QnlEYXRlKGRhdGVPYmopOwoKICAgICAgaWYgKHRhc2tDb3VudCA+IDApIHsKICAgICAgICByZXR1cm4gIiIuY29uY2F0KHRhc2tDb3VudCwgIiBsYXBvcmFuIHBhZGEgIikuY29uY2F0KGRhdGVTdHJpbmcpOwogICAgICB9CgogICAgICBpZiAoaXNXZWVrZW5kKGRhdGVPYmopKSB7CiAgICAgICAgcmV0dXJuIGRhdGVTdHJpbmc7CiAgICAgIH0KCiAgICAgIHJldHVybiAiQmVsdW0gYWRhIGxhcG9yYW4gcGFkYSAiLmNvbmNhdChkYXRlU3RyaW5nKTsKICAgIH0sCiAgICBnZXRIZWF0Q29sb3JCeURhdGVOdW06IGZ1bmN0aW9uIGdldEhlYXRDb2xvckJ5RGF0ZU51bShkYXRlTnVtKSB7CiAgICAgIGlmICh0aGlzLmlzTG9hZGluZykgewogICAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRDb2xvcjsKICAgICAgfQoKICAgICAgdmFyIGRhdGVPYmogPSBuZXcgRGF0ZSh0aGlzLnllYXIsIHRoaXMubW9udGgsIGRhdGVOdW0pOwogICAgICB2YXIgdGFza0NvdW50ID0gdGhpcy5nZXRUYXNrQ291bnRCeURhdGUoZGF0ZU9iaik7CiAgICAgIHZhciBjb2xvciA9IHRoaXMuZ2V0Q29sb3JCeVRhc2tDb3VudCh0YXNrQ291bnQpOwogICAgICByZXR1cm4gY29sb3I7CiAgICB9LAogICAgZ2V0Q29sb3JCeVRhc2tDb3VudDogZnVuY3Rpb24gZ2V0Q29sb3JCeVRhc2tDb3VudChjb3VudCkgewogICAgICB2YXIgaGVhdG1hcENvbG9yQ29uZmlnID0gdGhpcy5oZWF0bWFwQ29sb3JDb25maWc7CgogICAgICBpZiAoIUFycmF5LmlzQXJyYXkoaGVhdG1hcENvbG9yQ29uZmlnKSB8fCAhaGVhdG1hcENvbG9yQ29uZmlnLmxlbmd0aCkgewogICAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRDb2xvcjsKICAgICAgfQoKICAgICAgdmFyIGNvbG9yOwoKICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGhlYXRtYXBDb2xvckNvbmZpZy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgIHZhciBtaW5UYXNrID0gaGVhdG1hcENvbG9yQ29uZmlnW2ldWzBdOwogICAgICAgIHZhciBtYXhUYXNrID0gaSA8IGxlbiAtIDEgPyBoZWF0bWFwQ29sb3JDb25maWdbaSArIDFdWzBdIDogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7CgogICAgICAgIGlmIChjb3VudCA+PSBtaW5UYXNrICYmIGNvdW50IDwgbWF4VGFzaykgewogICAgICAgICAgY29sb3IgPSBoZWF0bWFwQ29sb3JDb25maWdbaV1bMV07CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBjb2xvciB8fCB0aGlzLmRlZmF1bHRDb2xvcjsKICAgIH0sCiAgICByYW5kb21pemVEZWxheTogZnVuY3Rpb24gcmFuZG9taXplRGVsYXkoKSB7CiAgICAgIHJldHVybiBNYXRoLnBvdyhNYXRoLnJhbmRvbSgpLCA0KSAqIDUwMDA7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["MonthlyHeatmap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"monthly-heatmap\">\n    <span\n      class=\"monthly-heatmap__month-name\">\n      {{ monthName }}\n    </span>\n    <svg\n      :viewBox=\"viewBoxRectSize\"\n      class=\"monthly-heatmap__blocks\"\n      :key=\"`${year}/${month}`\">\n      <g v-for=\"dayIndex in 7\"\n        :key=\"`day:${dayIndex}`\"\n        class=\"monthly-heatmap__block\"\n        fill=\"transparent\"\n      >\n        <rect\n          :width=\"rectSize\"\n          :height=\"rectSize\"\n          :x=\"getRectX(dayIndex - 1)\"\n          :y=\"getRectY(dayIndex - 1)\"\n        />\n        <text\n          :x=\"getDayNameTextX(dayIndex - 1)\"\n          :y=\"getDayNameTextY(dayIndex - 1)\"\n          fill=\"#bbb\"\n          style=\"font: bold 20px sans-serif; text-transform: uppercase;\"\n        >\n          {{ getDayName(dayIndex) }}\n        </text>\n      </g>\n      <g\n        v-for=\"(dateNum, index) in numOfDays\"\n        :key=\"dateNum\"\n        class=\"monthly-heatmap__block\"\n        fill=\"transparent\">\n        <rect\n          :key=\"`rect:${index}`\"\n          :class=\"{\n            'monthly-heatmap__block__rect': true,\n            'is-loading': isLoading\n          }\"\n          :style=\"{\n            fill: getHeatColorByDateNum(dateNum),\n            animationDelay: `${randomizeDelay(index)}ms`\n          }\"\n          :width=\"rectSize\"\n          :height=\"rectSize\"\n          :rx=\"rectSize / 10\"\n          :ry=\"rectSize / 10\"\n          :x=\"getRectX(7 + index + startOfMonthOffsetInDays)\"\n          :y=\"getRectY(index + startOfMonthOffsetInDays)\" />\n        <title>\n          {{ getTooltipContentByDateNum(dateNum) }}\n        </title>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport isValid from 'date-fns/isValid'\nimport formatDate from 'date-fns/format'\nimport getDaysInMonth from 'date-fns/getDaysInMonth'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getWeeksInMonth from 'date-fns/getWeeksInMonth'\nimport isWeekend from 'date-fns/isWeekend'\nimport id from 'date-fns/locale/id'\n\nimport { formatDateShort } from '../../../lib/date'\nimport { mapGetters, mapState } from 'vuex'\n\nexport default {\n  inject: {\n    heatmapColorConfig: {\n      from: 'heatmapColorConfig',\n      default: () => []\n    }\n  },\n  props: {\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    month: {\n      type: Number\n    },\n    year: {\n      type: Number\n    }\n  },\n  data () {\n    return {\n      rectGap: 6,\n      rectSize: 60,\n      defaultColor: '#ECEFF1'\n    }\n  },\n  computed: {\n    isMonthAndYearDefined () {\n      const { month, year } = this\n      const isNumber = typeof month === 'number' && typeof year === 'number'\n      const isValidDate = isValid(new Date(year, month))\n      return isNumber && isValidDate\n    },\n    ...mapGetters('logbook-heatmap', [\n      'getTaskCountByDate'\n    ]),\n    ...mapState('logbook-heatmap', {\n      heatmapData (state) {\n        if (!this.isMonthAndYearDefined) {\n          return null\n        }\n        const key = `${parseInt(this.year)}/${parseInt(this.month)}`\n        return state.dataByMonthYear[key] || null\n      }\n    }),\n    startOfMonthOffsetInDays () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      const monthStart = new Date(this.year, this.month, 1)\n      const calendarStart = startOfWeek(monthStart, {\n        weekStartsOn: 1\n      })\n      return differenceInDays(monthStart, calendarStart)\n    },\n    numOfWeeks () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      return getWeeksInMonth(new Date(this.year, this.month))\n    },\n    numOfDays () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      return getDaysInMonth(new Date(this.year, this.month))\n    },\n\n    viewBoxRectSize () {\n      // 7 is maximum num of weeks in month (6) + 1 column for day name\n      const maxNumOfColumns = 7\n      const width = (this.rectSize * maxNumOfColumns) + (this.rectGap * (maxNumOfColumns + 1))\n\n      // 7 is number of days within week\n      // 8 is number of gap for 7 rows\n      const height = (this.rectSize * 7) + (this.rectGap * 8)\n      return `0 0 ${width} ${height}`\n    },\n    monthName () {\n      return formatDate(new Date(this.year, this.month), 'MMMM', {\n        locale: id\n      })\n    }\n  },\n  methods: {\n    getDayName (dayIndex) {\n      // monday is zero in date-fns\n      const i = dayIndex === 7 ? 0 : dayIndex\n      return id.localize.day(i, {\n        width: 'short'\n      })\n    },\n    getDayNameTextY (dayIndex) {\n      const rectY = this.getRectY(dayIndex)\n      // 10 is half of font size\n      return 10 + rectY + Math.floor(this.rectSize / 2)\n    },\n    getDayNameTextX (dayIndex) {\n      return 0\n    },\n    getRectY (itemIndex) {\n      return this.rectGap + ((itemIndex % 7)) * (this.rectSize + this.rectGap)\n    },\n    getRectX (itemIndex) {\n      const colNum = Math.floor(itemIndex / 7)\n      return this.rectGap + (colNum * (this.rectSize + this.rectGap))\n    },\n\n    getTooltipContentByDateNum (dateNum) {\n      const dateObj = new Date(this.year, this.month, dateNum)\n      const dateString = formatDateShort(dateObj)\n\n      const taskCount = this.getTaskCountByDate(dateObj)\n      if (taskCount > 0) {\n        return `${taskCount} laporan pada ${dateString}`\n      }\n\n      if (isWeekend(dateObj)) {\n        return dateString\n      }\n      return `Belum ada laporan pada ${dateString}`\n    },\n    getHeatColorByDateNum (dateNum) {\n      if (this.isLoading) {\n        return this.defaultColor\n      }\n      const dateObj = new Date(this.year, this.month, dateNum)\n      const taskCount = this.getTaskCountByDate(dateObj)\n      const color = this.getColorByTaskCount(taskCount)\n      return color\n    },\n    getColorByTaskCount (count) {\n      const { heatmapColorConfig } = this\n      if (!Array.isArray(heatmapColorConfig) || !heatmapColorConfig.length) {\n        return this.defaultColor\n      }\n\n      let color\n      for (let i = 0, len = heatmapColorConfig.length; i < len; i++) {\n        const minTask = heatmapColorConfig[i][0]\n        const maxTask = i < len - 1\n          ? heatmapColorConfig[i + 1][0]\n          : Number.MAX_SAFE_INTEGER\n\n        if (count >= minTask && count < maxTask) {\n          color = heatmapColorConfig[i][1]\n          break\n        }\n      }\n      return color || this.defaultColor\n    },\n    randomizeDelay () {\n      return (Math.random() ** 4) * 5000\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@keyframes rotatingRect {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.monthly-heatmap {\n  max-width: 200px;\n  @apply inline-flex flex-col justify-between items-stretch;\n\n  &__blocks {\n    display: inline;\n    @apply w-full;\n  }\n\n  &__block {\n    transform-origin: 0 0;\n    @apply border-none bg-transparent;\n\n    &__rect {\n      transform-origin: center;\n      transform-box: fill-box;\n      cursor: pointer;\n      @apply border-none stroke-0;\n\n      &:hover {\n        stroke: rgb(0, 0, 0, 0.2);\n        stroke-width: 6;\n      }\n\n      &.is-loading {\n        animation: rotatingRect 1s infinite alternate ease-out;\n      }\n    }\n  }\n\n  &__month-name {\n    @apply block mb-2\n    text-left text-sm\n    text-green-600 font-bold;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/Dashboard/LogbookHeatmaps"}]}