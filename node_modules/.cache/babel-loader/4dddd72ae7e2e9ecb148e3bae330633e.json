{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/middleware/check-auth.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/middleware/check-auth.js","mtime":1673491775269},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qZHMvRG9jdW1lbnRzL2Rpc2tvbWluZm8vamRzL2RpZ2l0ZWFtL2dyb3Vwd2FyZS9ncm91cHdhcmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmltcG9ydCB7IGdldFRva2VuRnJvbUNvb2tpZSB9IGZyb20gJy4uL2xpYi9qcy1jb29raWUnOwppbXBvcnQgeyBzZXRUb2tlbiwgZ2V0TmV3VG9rZW4gfSBmcm9tICcuLi9saWIvYXhpb3MnOwp2YXIgcHVibGljUGF0aHMgPSBbJy8nLCAnL2xvZ2luJ107Cgp2YXIgaXNQdWJsaWNQYXRoID0gZnVuY3Rpb24gaXNQdWJsaWNQYXRoKHBhdGgpIHsKICBpZiAocGF0aCA9PT0gJy8nKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHJldHVybiBwdWJsaWNQYXRocy5zb21lKGZ1bmN0aW9uICh4KSB7CiAgICByZXR1cm4gcGF0aC5zdGFydHNXaXRoKHgpOwogIH0pOwp9OwoKZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qLyhmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciB0LCByZXN1bHQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwoKICAgICAgICAgICAgaWYgKHN0b3JlLnN0YXRlLmF1dGguaXNJbml0aWFsaXplZCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdCA9IGdldFRva2VuRnJvbUNvb2tpZSgpOwoKICAgICAgICAgICAgaWYgKHQpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBnZXROZXdUb2tlbigpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmF1dGhUb2tlbikgewogICAgICAgICAgICAgIHQgPSByZXN1bHQuYXV0aFRva2VuOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBpZiAoIXQpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHNldFRva2VuKHQpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgnYXV0aC9nZXRVc2VyUHJvZmlsZScpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwoKICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNjsKICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdhdXRoL0FVVEhfSU5JVElBTElaRUQnKTsKCiAgICAgICAgICAgIGlmIChzdG9yZS5zdGF0ZS5hdXRoLnVzZXIgfHwgaXNQdWJsaWNQYXRoKHRvLnBhdGgpKSB7CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG5leHQoJy8nKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgxNik7CgogICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDE0LCAxNiwgMjBdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KSgpOw=="},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/middleware/check-auth.js"],"names":["store","getTokenFromCookie","setToken","getNewToken","publicPaths","isPublicPath","path","some","x","startsWith","to","from","next","state","auth","isInitialized","t","result","authToken","dispatch","commit","user"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AAEA,IAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,QAAN,CAApB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,MAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SAAOF,WAAW,CAACG,IAAZ,CAAiB,UAAAC,CAAC;AAAA,WAAIF,IAAI,CAACG,UAAL,CAAgBD,CAAhB,CAAJ;AAAA,GAAlB,CAAP;AACD,CALD;;AAOA;AAAA,qEAAe,iBAAOE,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAENZ,KAAK,CAACa,KAAN,CAAYC,IAAZ,CAAiBC,aAFX;AAAA;AAAA;AAAA;;AAGLC,YAAAA,CAHK,GAGDf,kBAAkB,EAHjB;;AAAA,gBAIJe,CAJI;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKcb,WAAW,EALzB;;AAAA;AAKDc,YAAAA,MALC;;AAMP,gBAAIA,MAAM,IAAIA,MAAM,CAACC,SAArB,EAAgC;AAC9BF,cAAAA,CAAC,GAAGC,MAAM,CAACC,SAAX;AACD;;AARM;AAAA,iBAULF,CAVK;AAAA;AAAA;AAAA;;AAWPd,YAAAA,QAAQ,CAACc,CAAD,CAAR;AAXO;AAAA,mBAYDhB,KAAK,CAACmB,QAAN,CAAe,qBAAf,CAZC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBXnB,YAAAA,KAAK,CAACoB,MAAN,CAAa,uBAAb;;AACA,gBAAIpB,KAAK,CAACa,KAAN,CAAYC,IAAZ,CAAiBO,IAAjB,IAAyBhB,YAAY,CAACK,EAAE,CAACJ,IAAJ,CAAzC,EAAoD;AAClDM,cAAAA,IAAI;AACL,aAFD,MAEO;AACLA,cAAAA,IAAI,CAAC,GAAD,CAAJ;AACD;;AAvBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import store from '@/store'\nimport { getTokenFromCookie } from '../lib/js-cookie'\nimport { setToken, getNewToken } from '../lib/axios'\n\nconst publicPaths = ['/', '/login']\nconst isPublicPath = (path) => {\n  if (path === '/') {\n    return true\n  }\n  return publicPaths.some(x => path.startsWith(x))\n}\n\nexport default async (to, from, next) => {\n  try {\n    if (!store.state.auth.isInitialized) {\n      let t = getTokenFromCookie()\n      if (!t) {\n        const result = await getNewToken()\n        if (result && result.authToken) {\n          t = result.authToken\n        }\n      }\n      if (t) {\n        setToken(t)\n        await store.dispatch('auth/getUserProfile')\n      }\n    }\n  } catch (e) {\n    //\n  } finally {\n    store.commit('auth/AUTH_INITIALIZED')\n    if (store.state.auth.user || isPublicPath(to.path)) {\n      next()\n    } else {\n      next('/')\n    }\n  }\n}\n"]}]}