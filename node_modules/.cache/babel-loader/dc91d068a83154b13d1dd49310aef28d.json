{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/users-detail.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/users-detail.js","mtime":1673491775272},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL2dyb3Vwd2FyZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL2dyb3Vwd2FyZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgppbXBvcnQgKiBhcyB0eXBlcyBmcm9tICcuLi9tdXRhdGlvbi10eXBlcyc7CmltcG9ydCB7IGRiIH0gZnJvbSAnQC9saWIvZmlyZWJhc2UnOyAvLyBzdGF0ZQoKZXhwb3J0IHZhciBzdGF0ZSA9IHsKICBsb2FkaW5nOiB0cnVlLAogIGl0ZW06IG51bGwsCiAgZXJyb3I6IGZhbHNlCn07IC8vIGdldHRlcnMKCmV4cG9ydCB2YXIgZ2V0dGVycyA9IHsKICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubG9hZGluZzsKICB9LAogIGl0ZW06IGZ1bmN0aW9uIGl0ZW0oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pdGVtOwogIH0sCiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZXJyb3I7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCmV4cG9ydCB2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLlVTRVJTX0RFVEFJTF9JTklULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5pdGVtID0gbnVsbDsKICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTsKICBzdGF0ZS5lcnJvciA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLlVTRVJTX0RFVEFJTF9MT0FERUQsIGZ1bmN0aW9uIChzdGF0ZSwgX3JlZikgewogIHZhciBpdGVtID0gX3JlZi5pdGVtOwogIHN0YXRlLml0ZW0gPSBpdGVtOwogIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICBzdGF0ZS5lcnJvciA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLlVTRVJTX0RFVEFJTF9GQUlMRUQsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLml0ZW0gPSBudWxsOwogIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICBzdGF0ZS5lcnJvciA9IHRydWU7Cn0pLCBfbXV0YXRpb25zKTsgLy8gYWN0aW9ucwoKZXhwb3J0IHZhciBhY3Rpb25zID0gewogIGZldGNoSXRlbTogZnVuY3Rpb24gZmV0Y2hJdGVtKF9yZWYyLCBfcmVmMykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgaWQsIHF1ZXJ5U25hcHNob3QsIGRvYzsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBpZCA9IF9yZWYzLmlkOwogICAgICAgICAgICAgIGNvbW1pdCh0eXBlcy5VU0VSU19ERVRBSUxfSU5JVCk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZG9jKGlkKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBxdWVyeVNuYXBzaG90ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gcXVlcnlTbmFwc2hvdC5nZXQoKTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBkb2MgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIWRvYy5leGlzdHMpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY29tbWl0KHR5cGVzLlVTRVJTX0RFVEFJTF9MT0FERUQsIHsKICAgICAgICAgICAgICAgIGl0ZW06IGRvYy5kYXRhKCkKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGNvbW1pdCh0eXBlcy5VU0VSU19ERVRBSUxfRkFJTEVEKSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/users-detail.js"],"names":["types","db","state","loading","item","error","getters","mutations","USERS_DETAIL_INIT","USERS_DETAIL_LOADED","USERS_DETAIL_FAILED","actions","fetchItem","commit","id","collection","doc","querySnapshot","get","exists","data"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AACA,SAASC,EAAT,QAAmB,gBAAnB,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAAd,C,CAMP;;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBH,EAAAA,OAAO,EAAE,iBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GADO;AAErBC,EAAAA,IAAI,EAAE,cAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,IAAV;AAAA,GAFU;AAGrBC,EAAAA,KAAK,EAAE,eAAAH,KAAK;AAAA,WAAIA,KAAK,CAACG,KAAV;AAAA;AAHS,CAAhB,C,CAMP;;AACA,OAAO,IAAME,SAAS,iDACnBP,KAAK,CAACQ,iBADa,YACON,KADP,EACc;AAChCA,EAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACAF,EAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACAD,EAAAA,KAAK,CAACG,KAAN,GAAc,KAAd;AACD,CALmB,+BAOnBL,KAAK,CAACS,mBAPa,YAOSP,KAPT,QAO0B;AAAA,MAARE,IAAQ,QAARA,IAAQ;AAC5CF,EAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACAF,EAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACAD,EAAAA,KAAK,CAACG,KAAN,GAAc,KAAd;AACD,CAXmB,+BAanBL,KAAK,CAACU,mBAba,YAaSR,KAbT,EAagB;AAClCA,EAAAA,KAAK,CAACE,IAAN,GAAa,IAAb;AACAF,EAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACAD,EAAAA,KAAK,CAACG,KAAN,GAAc,IAAd;AACD,CAjBmB,cAAf,C,CAoBP;;AACA,OAAO,IAAMM,OAAO,GAAG;AACfC,EAAAA,SADe,mCACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBC,cAAAA,MAAkB,SAAlBA,MAAkB;AAANC,cAAAA,EAAM,SAANA,EAAM;AACnCD,cAAAA,MAAM,CAACb,KAAK,CAACQ,iBAAP,CAAN;AADmC;AAAA,qBAGPP,EAAE,CAACc,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,EAA3B,CAHO;;AAAA;AAG7BG,cAAAA,aAH6B;AAAA;AAAA,qBAIjBA,aAAa,CAACC,GAAd,EAJiB;;AAAA;AAI7BF,cAAAA,GAJ6B;;AAAA,mBAM/BA,GAAG,CAACG,MAN2B;AAAA;AAAA;AAAA;;AAAA,+CAO1BN,MAAM,CAACb,KAAK,CAACS,mBAAP,EAA4B;AAAEL,gBAAAA,IAAI,EAAEY,GAAG,CAACI,IAAJ;AAAR,eAA5B,CAPoB;;AAAA;AAAA,+CAU5BP,MAAM,CAACb,KAAK,CAACU,mBAAP,CAVsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpC;AAZoB,CAAhB","sourcesContent":["import * as types from '../mutation-types'\nimport { db } from '@/lib/firebase'\n\n// state\nexport const state = {\n  loading: true,\n  item: null,\n  error: false\n}\n\n// getters\nexport const getters = {\n  loading: state => state.loading,\n  item: state => state.item,\n  error: state => state.error\n}\n\n// mutations\nexport const mutations = {\n  [types.USERS_DETAIL_INIT] (state) {\n    state.item = null\n    state.loading = true\n    state.error = false\n  },\n\n  [types.USERS_DETAIL_LOADED] (state, { item }) {\n    state.item = item\n    state.loading = false\n    state.error = false\n  },\n\n  [types.USERS_DETAIL_FAILED] (state) {\n    state.item = null\n    state.loading = false\n    state.error = true\n  }\n}\n\n// actions\nexport const actions = {\n  async fetchItem ({ commit }, { id }) {\n    commit(types.USERS_DETAIL_INIT)\n\n    const querySnapshot = await db.collection('users').doc(id)\n    const doc = await querySnapshot.get()\n\n    if (doc.exists) {\n      return commit(types.USERS_DETAIL_LOADED, { item: doc.data() })\n    }\n\n    return commit(types.USERS_DETAIL_FAILED)\n  }\n}\n"]}]}