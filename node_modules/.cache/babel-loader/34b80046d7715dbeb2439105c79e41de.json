{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/events-list.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/events-list.js","mtime":1673491775271},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL2dyb3Vwd2FyZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL2dyb3Vwd2FyZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgppbXBvcnQgKiBhcyB0eXBlcyBmcm9tICcuLi9tdXRhdGlvbi10eXBlcyc7CmltcG9ydCB7IGRiIH0gZnJvbSAnQC9saWIvZmlyZWJhc2UnOwppbXBvcnQgeyBzdGFydE9mRGF5IH0gZnJvbSAnZGF0ZS1mbnMnOyAvLyBzdGF0ZQoKZXhwb3J0IHZhciBzdGF0ZSA9IHsKICBsb2FkaW5nOiB0cnVlLAogIGl0ZW1zOiBbXQp9OyAvLyBnZXR0ZXJzCgpleHBvcnQgdmFyIGdldHRlcnMgPSB7CiAgbG9hZGluZzogZnVuY3Rpb24gbG9hZGluZyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmxvYWRpbmc7CiAgfSwKICBpdGVtczogZnVuY3Rpb24gaXRlbXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pdGVtczsKICB9Cn07IC8vIG11dGF0aW9ucwoKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgdHlwZXMuRVZFTlRTX0lOSVQsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLmxvYWRpbmcgPSB0cnVlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLkVWRU5UU19MT0FERUQsIGZ1bmN0aW9uIChzdGF0ZSwgX3JlZikgewogIHZhciBpdGVtcyA9IF9yZWYuaXRlbXM7CiAgc3RhdGUuaXRlbXMgPSBpdGVtczsKICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7Cn0pLCBfbXV0YXRpb25zKTsgLy8gYWN0aW9ucwoKZXhwb3J0IHZhciBhY3Rpb25zID0gewogIGZldGNoSXRlbXM6IGZ1bmN0aW9uIGZldGNoSXRlbXMoX3JlZjIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHRvZGF5LCB0b2RheU1pZG5pZ2h0LCBxdWVyeVNuYXBzaG90LCBkb2N1bWVudHM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgIHRvZGF5TWlkbmlnaHQgPSBzdGFydE9mRGF5KHRvZGF5KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZGIuY29sbGVjdGlvbignZXZlbnRzJykud2hlcmUoJ3N0YXJ0X2RhdGV0aW1lJywgJz49JywgdG9kYXlNaWRuaWdodCkub3JkZXJCeSgnc3RhcnRfZGF0ZXRpbWUnKS5saW1pdCgyMCkuZ2V0KCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcXVlcnlTbmFwc2hvdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgZG9jdW1lbnRzID0gcXVlcnlTbmFwc2hvdC5kb2NzLm1hcChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZG9jLmRhdGEoKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjb21taXQodHlwZXMuRVZFTlRTX0xPQURFRCwgewogICAgICAgICAgICAgICAgaXRlbXM6IGRvY3VtZW50cwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/store/modules/events-list.js"],"names":["types","db","startOfDay","state","loading","items","getters","mutations","EVENTS_INIT","EVENTS_LOADED","actions","fetchItems","commit","today","Date","todayMidnight","collection","where","orderBy","limit","get","querySnapshot","documents","docs","map","doc","data"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAAd,C,CAKP;;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBF,EAAAA,OAAO,EAAE,iBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GADO;AAErBC,EAAAA,KAAK,EAAE,eAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,KAAV;AAAA;AAFS,CAAhB,C,CAKP;;AACA,OAAO,IAAME,SAAS,iDACnBP,KAAK,CAACQ,WADa,YACCL,KADD,EACQ;AAC1BA,EAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD,CAHmB,+BAKnBJ,KAAK,CAACS,aALa,YAKGN,KALH,QAKqB;AAAA,MAATE,KAAS,QAATA,KAAS;AACvCF,EAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACAF,EAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACD,CARmB,cAAf,C,CAWP;;AACA,OAAO,IAAMM,OAAO,GAAG;AACfC,EAAAA,UADe,6BACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,SAAVA,MAAU;AACtBC,cAAAA,KADsB,GACd,IAAIC,IAAJ,EADc;AAEtBC,cAAAA,aAFsB,GAENb,UAAU,CAACW,KAAD,CAFJ;AAAA;AAAA,qBAIAZ,EAAE,CAACe,UAAH,CAAc,QAAd,EACzBC,KADyB,CACnB,gBADmB,EACD,IADC,EACKF,aADL,EAEzBG,OAFyB,CAEjB,gBAFiB,EAGzBC,KAHyB,CAGnB,EAHmB,EAIzBC,GAJyB,EAJA;;AAAA;AAItBC,cAAAA,aAJsB;AAUtBC,cAAAA,SAVsB,GAUVD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAA1B,CAVU;AAY5Bd,cAAAA,MAAM,CAACZ,KAAK,CAACS,aAAP,EAAsB;AAAEJ,gBAAAA,KAAK,EAAEiB;AAAT,eAAtB,CAAN;;AAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa7B;AAdoB,CAAhB","sourcesContent":["import * as types from '../mutation-types'\nimport { db } from '@/lib/firebase'\nimport { startOfDay } from 'date-fns'\n\n// state\nexport const state = {\n  loading: true,\n  items: []\n}\n\n// getters\nexport const getters = {\n  loading: state => state.loading,\n  items: state => state.items\n}\n\n// mutations\nexport const mutations = {\n  [types.EVENTS_INIT] (state) {\n    state.loading = true\n  },\n\n  [types.EVENTS_LOADED] (state, { items }) {\n    state.items = items\n    state.loading = false\n  }\n}\n\n// actions\nexport const actions = {\n  async fetchItems ({ commit }) {\n    const today = new Date()\n    const todayMidnight = startOfDay(today)\n\n    const querySnapshot = await db.collection('events')\n      .where('start_datetime', '>=', todayMidnight)\n      .orderBy('start_datetime')\n      .limit(20)\n      .get()\n\n    const documents = querySnapshot.docs.map(doc => doc.data())\n\n    commit(types.EVENTS_LOADED, { items: documents })\n  }\n}\n"]}]}