{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/logbook-heatmap.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/logbook-heatmap.js","mtime":1673491775271},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmZyZWV6ZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHBNaW5EZWxheSBmcm9tICdwLW1pbi1kZWxheSc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgR3JvdXB3YXJlQVBJIH0gZnJvbSAnLi4vLi4vbGliL2F4aW9zJzsKCmZ1bmN0aW9uIGdldEhlYXRtYXBEYXRhS2V5KG1vbnRoLCB5ZWFyKSB7CiAgcmV0dXJuICIiLmNvbmNhdChwYXJzZUludCh5ZWFyKSwgIi8iKS5jb25jYXQocGFyc2VJbnQobW9udGgpKTsKfQoKZXhwb3J0IHZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7CiAgICBhbGxMb2dib29rRGF0YTogW10sCiAgICBkYXRhQnlNb250aFllYXI6IHt9LAogICAgaXNMb2FkaW5nOiBmYWxzZQogIH07Cn07CmV4cG9ydCB2YXIgZ2V0dGVycyA9IHsKICBnZXRUYXNrQ291bnRCeURhdGU6IGZ1bmN0aW9uIGdldFRhc2tDb3VudEJ5RGF0ZShzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRlKSB7CiAgICAgIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkgewogICAgICAgIHZhciBfcmVmID0gW2RhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXRGdWxsWWVhcigpXSwKICAgICAgICAgICAgbW9udGggPSBfcmVmWzBdLAogICAgICAgICAgICB5ZWFyID0gX3JlZlsxXTsKICAgICAgICB2YXIga2V5ID0gZ2V0SGVhdG1hcERhdGFLZXkobW9udGgsIHllYXIpOwoKICAgICAgICBpZiAoa2V5IGluIHN0YXRlLmRhdGFCeU1vbnRoWWVhciA9PT0gZmFsc2UpIHsKICAgICAgICAgIHJldHVybiAwOwogICAgICAgIH0KCiAgICAgICAgdmFyIGRhdGVTdHJpbmcgPSBkYXRlLmdldERhdGUoKS50b1N0cmluZygpOwogICAgICAgIHJldHVybiBzdGF0ZS5kYXRhQnlNb250aFllYXJba2V5XVtkYXRlU3RyaW5nXSB8fCAwOwogICAgICB9IGVsc2UgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2RhdGUgbXVzdCBiZSBpbnN0YW5jZW9mIERhdGUnKTsKICAgICAgfQogICAgfTsKICB9Cn07CmV4cG9ydCB2YXIgbXV0YXRpb25zID0gewogIHRvZ2dsZUxvYWRpbmc6IGZ1bmN0aW9uIHRvZ2dsZUxvYWRpbmcoc3RhdGUsIGlzTG9hZGluZykgewogICAgc3RhdGUuaXNMb2FkaW5nID0gdHlwZW9mIGlzTG9hZGluZyA9PT0gJ2Jvb2xlYW4nID8gaXNMb2FkaW5nIDogIXN0YXRlLmlzTG9hZGluZzsKICB9LAogIHNldExvZ2Jvb2tEYXRhOiBmdW5jdGlvbiBzZXRMb2dib29rRGF0YShzdGF0ZSwgZGF0YSkgewogICAgc3RhdGUuYWxsTG9nYm9va0RhdGEgPSBBcnJheS5pc0FycmF5KGRhdGEpID8gZGF0YSA6IFtdOwogICAgdmFyIGdyb3VwZWRCeU1vbnRoID0gc3RhdGUuYWxsTG9nYm9va0RhdGEucmVkdWNlKGZ1bmN0aW9uIChncm91cHMsIGxvZ2Jvb2spIHsKICAgICAgdmFyIGRhdGVUYXNrID0gbmV3IERhdGUobG9nYm9vay5kYXRlVGFzayk7CiAgICAgIHZhciBfcmVmMiA9IFtkYXRlVGFzay5nZXREYXRlKCksIGRhdGVUYXNrLmdldE1vbnRoKCksIGRhdGVUYXNrLmdldEZ1bGxZZWFyKCldLAogICAgICAgICAgZGF0ZU51bSA9IF9yZWYyWzBdLAogICAgICAgICAgbW9udGggPSBfcmVmMlsxXSwKICAgICAgICAgIHllYXIgPSBfcmVmMlsyXTsKICAgICAgdmFyIGdyb3VwTmFtZSA9ICIiLmNvbmNhdCh5ZWFyLCAiLyIpLmNvbmNhdChtb250aCk7CgogICAgICBpZiAoZ3JvdXBOYW1lIGluIGdyb3VwcyA9PT0gZmFsc2UpIHsKICAgICAgICBncm91cHNbZ3JvdXBOYW1lXSA9IHt9OwogICAgICB9CgogICAgICBpZiAoZGF0ZU51bSBpbiBncm91cHNbZ3JvdXBOYW1lXSA9PT0gZmFsc2UpIHsKICAgICAgICBncm91cHNbZ3JvdXBOYW1lXVtkYXRlTnVtXSA9IDE7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZ3JvdXBzW2dyb3VwTmFtZV1bZGF0ZU51bV0gKz0gMTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdyb3VwczsKICAgIH0sIHt9KTsKICAgIHN0YXRlLmRhdGFCeU1vbnRoWWVhciA9IGdyb3VwZWRCeU1vbnRoOwogIH0sCiAgc2V0SGVhdE1hcERhdGE6IGZ1bmN0aW9uIHNldEhlYXRNYXBEYXRhKHN0YXRlLCBfcmVmMykgewogICAgdmFyIG1vbnRoID0gX3JlZjMubW9udGgsCiAgICAgICAgeWVhciA9IF9yZWYzLnllYXIsCiAgICAgICAgZGF0YSA9IF9yZWYzLmRhdGE7CiAgICB2YXIga2V5ID0gZ2V0SGVhdG1hcERhdGFLZXkobW9udGgsIHllYXIpOwogICAgdmFyIGdyb3VwZWRCeURhdGUgPSBkYXRhLnJlZHVjZShmdW5jdGlvbiAoZ3JvdXBzLCBpdGVtKSB7CiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoaXRlbS5kYXRlVGFzaykuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7CgogICAgICBpZiAoZGF0ZSBpbiBncm91cHMpIHsKICAgICAgICBncm91cHNbZGF0ZV0gKz0gMTsKICAgICAgfSBlbHNlIHsKICAgICAgICBncm91cHNbZGF0ZV0gPSAxOwogICAgICB9CgogICAgICByZXR1cm4gZ3JvdXBzOwogICAgfSwge30pOwogICAgVnVlLnNldChzdGF0ZS5kYXRhQnlNb250aFllYXIsIGtleSwgT2JqZWN0LmZyZWV6ZShncm91cGVkQnlEYXRlKSk7CiAgfQp9OwpleHBvcnQgdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hBbGxMb2dib29rRGF0YTogZnVuY3Rpb24gZmV0Y2hBbGxMb2dib29rRGF0YShfcmVmNCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoLCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGUsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKCiAgICAgICAgICAgICAgaWYgKCFzdGF0ZS5pc0xvYWRpbmcpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoJ3RvZ2dsZUxvYWRpbmcnLCB0cnVlKTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gcE1pbkRlbGF5KEdyb3Vwd2FyZUFQSS5nZXQoJy9sb2dib29rL2JhdGNoJyksIDE1MDApOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldExvZ2Jvb2tEYXRhJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg0KTsKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICAgIGNvbW1pdCgndG9nZ2xlTG9hZGluZycsIGZhbHNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDE0KTsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNCwgMTEsIDE0LCAxN11dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/logbook-heatmap.js"],"names":["pMinDelay","Vue","GroupwareAPI","getHeatmapDataKey","month","year","parseInt","state","allLogbookData","dataByMonthYear","isLoading","getters","getTaskCountByDate","date","Date","getMonth","getFullYear","key","dateString","getDate","toString","TypeError","mutations","toggleLoading","setLogbookData","data","Array","isArray","groupedByMonth","reduce","groups","logbook","dateTask","dateNum","groupName","setHeatMapData","groupedByDate","item","set","Object","freeze","actions","fetchAllLogbookData","commit","dispatch","get","response"],"mappings":"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","sourcesContent":["import pMinDelay from 'p-min-delay'\nimport Vue from 'vue'\nimport { GroupwareAPI } from '../../lib/axios'\n\nfunction getHeatmapDataKey (month, year) {\n  return `${parseInt(year)}/${parseInt(month)}`\n}\n\nexport const state = () => ({\n  allLogbookData: [],\n  dataByMonthYear: {},\n  isLoading: false\n})\n\nexport const getters = {\n  getTaskCountByDate: (state) => (date) => {\n    if (date instanceof Date) {\n      const [month, year] = [date.getMonth(), date.getFullYear()]\n      const key = getHeatmapDataKey(month, year)\n      if (key in state.dataByMonthYear === false) {\n        return 0\n      }\n      const dateString = date.getDate().toString()\n      return state.dataByMonthYear[key][dateString] || 0\n    } else {\n      throw new TypeError('date must be instanceof Date')\n    }\n  }\n}\n\nexport const mutations = {\n  toggleLoading (state, isLoading) {\n    state.isLoading = typeof isLoading === 'boolean'\n      ? isLoading\n      : !state.isLoading\n  },\n  setLogbookData (state, data) {\n    state.allLogbookData = Array.isArray(data) ? data : []\n\n    const groupedByMonth = state.allLogbookData.reduce((groups, logbook) => {\n      const dateTask = new Date(logbook.dateTask)\n      const [dateNum, month, year] = [\n        dateTask.getDate(),\n        dateTask.getMonth(),\n        dateTask.getFullYear()\n      ]\n      const groupName = `${year}/${month}`\n      if (groupName in groups === false) {\n        groups[groupName] = {}\n      }\n      if (dateNum in groups[groupName] === false) {\n        groups[groupName][dateNum] = 1\n      } else {\n        groups[groupName][dateNum] += 1\n      }\n\n      return groups\n    }, {})\n\n    state.dataByMonthYear = groupedByMonth\n  },\n  setHeatMapData (state, { month, year, data }) {\n    const key = getHeatmapDataKey(month, year)\n    const groupedByDate = data.reduce((groups, item) => {\n      const date = new Date(item.dateTask).getDate().toString()\n      if (date in groups) {\n        groups[date] += 1\n      } else {\n        groups[date] = 1\n      }\n      return groups\n    }, {})\n\n    Vue.set(state.dataByMonthYear, key, Object.freeze(groupedByDate))\n  }\n}\n\nexport const actions = {\n  async fetchAllLogbookData ({ state, commit, dispatch }) {\n    if (state.isLoading) {\n      return\n    }\n    commit('toggleLoading', true)\n    try {\n      const response = await pMinDelay(GroupwareAPI.get('/logbook/batch'), 1500)\n      commit('setLogbookData', response.data)\n    } catch (e) {\n      throw e\n    } finally {\n      commit('toggleLoading', false)\n    }\n  }\n}\n"]}]}