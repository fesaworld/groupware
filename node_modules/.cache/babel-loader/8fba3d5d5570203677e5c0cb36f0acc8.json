{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/components/Dashboard/LogbookHeatmaps/MonthlyHeatmap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/src/components/Dashboard/LogbookHeatmaps/MonthlyHeatmap.vue","mtime":1673491775261},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/groupware/node_modules/vue-loader/lib/index.js","mtime":1673491936504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLm1heC1zYWZlLWludGVnZXIiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvamRzL0RvY3VtZW50cy9kaXNrb21pbmZvL2pkcy9kaWdpdGVhbS9ncm91cHdhcmUvZ3JvdXB3YXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGlzVmFsaWQgZnJvbSAnZGF0ZS1mbnMvaXNWYWxpZCc7CmltcG9ydCBmb3JtYXREYXRlIGZyb20gJ2RhdGUtZm5zL2Zvcm1hdCc7CmltcG9ydCBnZXREYXlzSW5Nb250aCBmcm9tICdkYXRlLWZucy9nZXREYXlzSW5Nb250aCc7CmltcG9ydCBkaWZmZXJlbmNlSW5EYXlzIGZyb20gJ2RhdGUtZm5zL2RpZmZlcmVuY2VJbkRheXMnOwppbXBvcnQgc3RhcnRPZldlZWsgZnJvbSAnZGF0ZS1mbnMvc3RhcnRPZldlZWsnOwppbXBvcnQgZ2V0V2Vla3NJbk1vbnRoIGZyb20gJ2RhdGUtZm5zL2dldFdlZWtzSW5Nb250aCc7CmltcG9ydCBpc1dlZWtlbmQgZnJvbSAnZGF0ZS1mbnMvaXNXZWVrZW5kJzsKaW1wb3J0IGlkIGZyb20gJ2RhdGUtZm5zL2xvY2FsZS9pZCc7CmltcG9ydCB7IGZvcm1hdERhdGVTaG9ydCB9IGZyb20gJy4uLy4uLy4uL2xpYi9kYXRlJzsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGluamVjdDogewogICAgaGVhdG1hcENvbG9yQ29uZmlnOiB7CiAgICAgIGZyb206ICdoZWF0bWFwQ29sb3JDb25maWcnLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0KICB9LAogIHByb3BzOiB7CiAgICBpc0xvYWRpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtb250aDogewogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICB5ZWFyOiB7CiAgICAgIHR5cGU6IE51bWJlcgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlY3RHYXA6IDYsCiAgICAgIHJlY3RTaXplOiA2MCwKICAgICAgZGVmYXVsdENvbG9yOiAnI0VDRUZGMScKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgaXNNb250aEFuZFllYXJEZWZpbmVkOiBmdW5jdGlvbiBpc01vbnRoQW5kWWVhckRlZmluZWQoKSB7CiAgICAgIHZhciBtb250aCA9IHRoaXMubW9udGgsCiAgICAgICAgICB5ZWFyID0gdGhpcy55ZWFyOwogICAgICB2YXIgaXNOdW1iZXIgPSB0eXBlb2YgbW9udGggPT09ICdudW1iZXInICYmIHR5cGVvZiB5ZWFyID09PSAnbnVtYmVyJzsKICAgICAgdmFyIGlzVmFsaWREYXRlID0gaXNWYWxpZChuZXcgRGF0ZSh5ZWFyLCBtb250aCkpOwogICAgICByZXR1cm4gaXNOdW1iZXIgJiYgaXNWYWxpZERhdGU7CiAgICB9CiAgfSwgbWFwR2V0dGVycygnbG9nYm9vay1oZWF0bWFwJywgWydnZXRUYXNrQ291bnRCeURhdGUnXSkpLCBtYXBTdGF0ZSgnbG9nYm9vay1oZWF0bWFwJywgewogICAgaGVhdG1hcERhdGE6IGZ1bmN0aW9uIGhlYXRtYXBEYXRhKHN0YXRlKSB7CiAgICAgIGlmICghdGhpcy5pc01vbnRoQW5kWWVhckRlZmluZWQpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgdmFyIGtleSA9ICIiLmNvbmNhdChwYXJzZUludCh0aGlzLnllYXIpLCAiLyIpLmNvbmNhdChwYXJzZUludCh0aGlzLm1vbnRoKSk7CiAgICAgIHJldHVybiBzdGF0ZS5kYXRhQnlNb250aFllYXJba2V5XSB8fCBudWxsOwogICAgfQogIH0pKSwge30sIHsKICAgIHN0YXJ0T2ZNb250aE9mZnNldEluRGF5czogZnVuY3Rpb24gc3RhcnRPZk1vbnRoT2Zmc2V0SW5EYXlzKCkgewogICAgICBpZiAoIXRoaXMuaXNNb250aEFuZFllYXJEZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KCiAgICAgIHZhciBtb250aFN0YXJ0ID0gbmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoLCAxKTsKICAgICAgdmFyIGNhbGVuZGFyU3RhcnQgPSBzdGFydE9mV2Vlayhtb250aFN0YXJ0LCB7CiAgICAgICAgd2Vla1N0YXJ0c09uOiAxCiAgICAgIH0pOwogICAgICByZXR1cm4gZGlmZmVyZW5jZUluRGF5cyhtb250aFN0YXJ0LCBjYWxlbmRhclN0YXJ0KTsKICAgIH0sCiAgICBudW1PZldlZWtzOiBmdW5jdGlvbiBudW1PZldlZWtzKCkgewogICAgICBpZiAoIXRoaXMuaXNNb250aEFuZFllYXJEZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRXZWVrc0luTW9udGgobmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoKSk7CiAgICB9LAogICAgbnVtT2ZEYXlzOiBmdW5jdGlvbiBudW1PZkRheXMoKSB7CiAgICAgIGlmICghdGhpcy5pc01vbnRoQW5kWWVhckRlZmluZWQpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldERheXNJbk1vbnRoKG5ldyBEYXRlKHRoaXMueWVhciwgdGhpcy5tb250aCkpOwogICAgfSwKICAgIHZpZXdCb3hSZWN0U2l6ZTogZnVuY3Rpb24gdmlld0JveFJlY3RTaXplKCkgewogICAgICAvLyA3IGlzIG1heGltdW0gbnVtIG9mIHdlZWtzIGluIG1vbnRoICg2KSArIDEgY29sdW1uIGZvciBkYXkgbmFtZQogICAgICB2YXIgbWF4TnVtT2ZDb2x1bW5zID0gNzsKICAgICAgdmFyIHdpZHRoID0gdGhpcy5yZWN0U2l6ZSAqIG1heE51bU9mQ29sdW1ucyArIHRoaXMucmVjdEdhcCAqIChtYXhOdW1PZkNvbHVtbnMgKyAxKTsgLy8gNyBpcyBudW1iZXIgb2YgZGF5cyB3aXRoaW4gd2VlawogICAgICAvLyA4IGlzIG51bWJlciBvZiBnYXAgZm9yIDcgcm93cwoKICAgICAgdmFyIGhlaWdodCA9IHRoaXMucmVjdFNpemUgKiA3ICsgdGhpcy5yZWN0R2FwICogODsKICAgICAgcmV0dXJuICIwIDAgIi5jb25jYXQod2lkdGgsICIgIikuY29uY2F0KGhlaWdodCk7CiAgICB9LAogICAgbW9udGhOYW1lOiBmdW5jdGlvbiBtb250aE5hbWUoKSB7CiAgICAgIHJldHVybiBmb3JtYXREYXRlKG5ldyBEYXRlKHRoaXMueWVhciwgdGhpcy5tb250aCksICdNTU1NJywgewogICAgICAgIGxvY2FsZTogaWQKICAgICAgfSk7CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgZ2V0RGF5TmFtZTogZnVuY3Rpb24gZ2V0RGF5TmFtZShkYXlJbmRleCkgewogICAgICAvLyBtb25kYXkgaXMgemVybyBpbiBkYXRlLWZucwogICAgICB2YXIgaSA9IGRheUluZGV4ID09PSA3ID8gMCA6IGRheUluZGV4OwogICAgICByZXR1cm4gaWQubG9jYWxpemUuZGF5KGksIHsKICAgICAgICB3aWR0aDogJ3Nob3J0JwogICAgICB9KTsKICAgIH0sCiAgICBnZXREYXlOYW1lVGV4dFk6IGZ1bmN0aW9uIGdldERheU5hbWVUZXh0WShkYXlJbmRleCkgewogICAgICB2YXIgcmVjdFkgPSB0aGlzLmdldFJlY3RZKGRheUluZGV4KTsgLy8gMTAgaXMgaGFsZiBvZiBmb250IHNpemUKCiAgICAgIHJldHVybiAxMCArIHJlY3RZICsgTWF0aC5mbG9vcih0aGlzLnJlY3RTaXplIC8gMik7CiAgICB9LAogICAgZ2V0RGF5TmFtZVRleHRYOiBmdW5jdGlvbiBnZXREYXlOYW1lVGV4dFgoZGF5SW5kZXgpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9LAogICAgZ2V0UmVjdFk6IGZ1bmN0aW9uIGdldFJlY3RZKGl0ZW1JbmRleCkgewogICAgICByZXR1cm4gdGhpcy5yZWN0R2FwICsgaXRlbUluZGV4ICUgNyAqICh0aGlzLnJlY3RTaXplICsgdGhpcy5yZWN0R2FwKTsKICAgIH0sCiAgICBnZXRSZWN0WDogZnVuY3Rpb24gZ2V0UmVjdFgoaXRlbUluZGV4KSB7CiAgICAgIHZhciBjb2xOdW0gPSBNYXRoLmZsb29yKGl0ZW1JbmRleCAvIDcpOwogICAgICByZXR1cm4gdGhpcy5yZWN0R2FwICsgY29sTnVtICogKHRoaXMucmVjdFNpemUgKyB0aGlzLnJlY3RHYXApOwogICAgfSwKICAgIGdldFRvb2x0aXBDb250ZW50QnlEYXRlTnVtOiBmdW5jdGlvbiBnZXRUb29sdGlwQ29udGVudEJ5RGF0ZU51bShkYXRlTnVtKSB7CiAgICAgIHZhciBkYXRlT2JqID0gbmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoLCBkYXRlTnVtKTsKICAgICAgdmFyIGRhdGVTdHJpbmcgPSBmb3JtYXREYXRlU2hvcnQoZGF0ZU9iaik7CiAgICAgIHZhciB0YXNrQ291bnQgPSB0aGlzLmdldFRhc2tDb3VudEJ5RGF0ZShkYXRlT2JqKTsKCiAgICAgIGlmICh0YXNrQ291bnQgPiAwKSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdCh0YXNrQ291bnQsICIgbGFwb3JhbiBwYWRhICIpLmNvbmNhdChkYXRlU3RyaW5nKTsKICAgICAgfQoKICAgICAgaWYgKGlzV2Vla2VuZChkYXRlT2JqKSkgewogICAgICAgIHJldHVybiBkYXRlU3RyaW5nOwogICAgICB9CgogICAgICByZXR1cm4gIkJlbHVtIGFkYSBsYXBvcmFuIHBhZGEgIi5jb25jYXQoZGF0ZVN0cmluZyk7CiAgICB9LAogICAgZ2V0SGVhdENvbG9yQnlEYXRlTnVtOiBmdW5jdGlvbiBnZXRIZWF0Q29sb3JCeURhdGVOdW0oZGF0ZU51bSkgewogICAgICBpZiAodGhpcy5pc0xvYWRpbmcpIHsKICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0Q29sb3I7CiAgICAgIH0KCiAgICAgIHZhciBkYXRlT2JqID0gbmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoLCBkYXRlTnVtKTsKICAgICAgdmFyIHRhc2tDb3VudCA9IHRoaXMuZ2V0VGFza0NvdW50QnlEYXRlKGRhdGVPYmopOwogICAgICB2YXIgY29sb3IgPSB0aGlzLmdldENvbG9yQnlUYXNrQ291bnQodGFza0NvdW50KTsKICAgICAgcmV0dXJuIGNvbG9yOwogICAgfSwKICAgIGdldENvbG9yQnlUYXNrQ291bnQ6IGZ1bmN0aW9uIGdldENvbG9yQnlUYXNrQ291bnQoY291bnQpIHsKICAgICAgdmFyIGhlYXRtYXBDb2xvckNvbmZpZyA9IHRoaXMuaGVhdG1hcENvbG9yQ29uZmlnOwoKICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGhlYXRtYXBDb2xvckNvbmZpZykgfHwgIWhlYXRtYXBDb2xvckNvbmZpZy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0Q29sb3I7CiAgICAgIH0KCiAgICAgIHZhciBjb2xvcjsKCiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBoZWF0bWFwQ29sb3JDb25maWcubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICB2YXIgbWluVGFzayA9IGhlYXRtYXBDb2xvckNvbmZpZ1tpXVswXTsKICAgICAgICB2YXIgbWF4VGFzayA9IGkgPCBsZW4gLSAxID8gaGVhdG1hcENvbG9yQ29uZmlnW2kgKyAxXVswXSA6IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSOwoKICAgICAgICBpZiAoY291bnQgPj0gbWluVGFzayAmJiBjb3VudCA8IG1heFRhc2spIHsKICAgICAgICAgIGNvbG9yID0gaGVhdG1hcENvbG9yQ29uZmlnW2ldWzFdOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gY29sb3IgfHwgdGhpcy5kZWZhdWx0Q29sb3I7CiAgICB9LAogICAgcmFuZG9taXplRGVsYXk6IGZ1bmN0aW9uIHJhbmRvbWl6ZURlbGF5KCkgewogICAgICByZXR1cm4gTWF0aC5wb3coTWF0aC5yYW5kb20oKSwgNCkgKiA1MDAwOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MonthlyHeatmap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"monthly-heatmap\">\n    <span\n      class=\"monthly-heatmap__month-name\">\n      {{ monthName }}\n    </span>\n    <svg\n      :viewBox=\"viewBoxRectSize\"\n      class=\"monthly-heatmap__blocks\"\n      :key=\"`${year}/${month}`\">\n      <g v-for=\"dayIndex in 7\"\n        :key=\"`day:${dayIndex}`\"\n        class=\"monthly-heatmap__block\"\n        fill=\"transparent\"\n      >\n        <rect\n          :width=\"rectSize\"\n          :height=\"rectSize\"\n          :x=\"getRectX(dayIndex - 1)\"\n          :y=\"getRectY(dayIndex - 1)\"\n        />\n        <text\n          :x=\"getDayNameTextX(dayIndex - 1)\"\n          :y=\"getDayNameTextY(dayIndex - 1)\"\n          fill=\"#bbb\"\n          style=\"font: bold 20px sans-serif; text-transform: uppercase;\"\n        >\n          {{ getDayName(dayIndex) }}\n        </text>\n      </g>\n      <g\n        v-for=\"(dateNum, index) in numOfDays\"\n        :key=\"dateNum\"\n        class=\"monthly-heatmap__block\"\n        fill=\"transparent\">\n        <rect\n          :key=\"`rect:${index}`\"\n          :class=\"{\n            'monthly-heatmap__block__rect': true,\n            'is-loading': isLoading\n          }\"\n          :style=\"{\n            fill: getHeatColorByDateNum(dateNum),\n            animationDelay: `${randomizeDelay(index)}ms`\n          }\"\n          :width=\"rectSize\"\n          :height=\"rectSize\"\n          :rx=\"rectSize / 10\"\n          :ry=\"rectSize / 10\"\n          :x=\"getRectX(7 + index + startOfMonthOffsetInDays)\"\n          :y=\"getRectY(index + startOfMonthOffsetInDays)\" />\n        <title>\n          {{ getTooltipContentByDateNum(dateNum) }}\n        </title>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport isValid from 'date-fns/isValid'\nimport formatDate from 'date-fns/format'\nimport getDaysInMonth from 'date-fns/getDaysInMonth'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getWeeksInMonth from 'date-fns/getWeeksInMonth'\nimport isWeekend from 'date-fns/isWeekend'\nimport id from 'date-fns/locale/id'\n\nimport { formatDateShort } from '../../../lib/date'\nimport { mapGetters, mapState } from 'vuex'\n\nexport default {\n  inject: {\n    heatmapColorConfig: {\n      from: 'heatmapColorConfig',\n      default: () => []\n    }\n  },\n  props: {\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    month: {\n      type: Number\n    },\n    year: {\n      type: Number\n    }\n  },\n  data () {\n    return {\n      rectGap: 6,\n      rectSize: 60,\n      defaultColor: '#ECEFF1'\n    }\n  },\n  computed: {\n    isMonthAndYearDefined () {\n      const { month, year } = this\n      const isNumber = typeof month === 'number' && typeof year === 'number'\n      const isValidDate = isValid(new Date(year, month))\n      return isNumber && isValidDate\n    },\n    ...mapGetters('logbook-heatmap', [\n      'getTaskCountByDate'\n    ]),\n    ...mapState('logbook-heatmap', {\n      heatmapData (state) {\n        if (!this.isMonthAndYearDefined) {\n          return null\n        }\n        const key = `${parseInt(this.year)}/${parseInt(this.month)}`\n        return state.dataByMonthYear[key] || null\n      }\n    }),\n    startOfMonthOffsetInDays () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      const monthStart = new Date(this.year, this.month, 1)\n      const calendarStart = startOfWeek(monthStart, {\n        weekStartsOn: 1\n      })\n      return differenceInDays(monthStart, calendarStart)\n    },\n    numOfWeeks () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      return getWeeksInMonth(new Date(this.year, this.month))\n    },\n    numOfDays () {\n      if (!this.isMonthAndYearDefined) {\n        return 0\n      }\n      return getDaysInMonth(new Date(this.year, this.month))\n    },\n\n    viewBoxRectSize () {\n      // 7 is maximum num of weeks in month (6) + 1 column for day name\n      const maxNumOfColumns = 7\n      const width = (this.rectSize * maxNumOfColumns) + (this.rectGap * (maxNumOfColumns + 1))\n\n      // 7 is number of days within week\n      // 8 is number of gap for 7 rows\n      const height = (this.rectSize * 7) + (this.rectGap * 8)\n      return `0 0 ${width} ${height}`\n    },\n    monthName () {\n      return formatDate(new Date(this.year, this.month), 'MMMM', {\n        locale: id\n      })\n    }\n  },\n  methods: {\n    getDayName (dayIndex) {\n      // monday is zero in date-fns\n      const i = dayIndex === 7 ? 0 : dayIndex\n      return id.localize.day(i, {\n        width: 'short'\n      })\n    },\n    getDayNameTextY (dayIndex) {\n      const rectY = this.getRectY(dayIndex)\n      // 10 is half of font size\n      return 10 + rectY + Math.floor(this.rectSize / 2)\n    },\n    getDayNameTextX (dayIndex) {\n      return 0\n    },\n    getRectY (itemIndex) {\n      return this.rectGap + ((itemIndex % 7)) * (this.rectSize + this.rectGap)\n    },\n    getRectX (itemIndex) {\n      const colNum = Math.floor(itemIndex / 7)\n      return this.rectGap + (colNum * (this.rectSize + this.rectGap))\n    },\n\n    getTooltipContentByDateNum (dateNum) {\n      const dateObj = new Date(this.year, this.month, dateNum)\n      const dateString = formatDateShort(dateObj)\n\n      const taskCount = this.getTaskCountByDate(dateObj)\n      if (taskCount > 0) {\n        return `${taskCount} laporan pada ${dateString}`\n      }\n\n      if (isWeekend(dateObj)) {\n        return dateString\n      }\n      return `Belum ada laporan pada ${dateString}`\n    },\n    getHeatColorByDateNum (dateNum) {\n      if (this.isLoading) {\n        return this.defaultColor\n      }\n      const dateObj = new Date(this.year, this.month, dateNum)\n      const taskCount = this.getTaskCountByDate(dateObj)\n      const color = this.getColorByTaskCount(taskCount)\n      return color\n    },\n    getColorByTaskCount (count) {\n      const { heatmapColorConfig } = this\n      if (!Array.isArray(heatmapColorConfig) || !heatmapColorConfig.length) {\n        return this.defaultColor\n      }\n\n      let color\n      for (let i = 0, len = heatmapColorConfig.length; i < len; i++) {\n        const minTask = heatmapColorConfig[i][0]\n        const maxTask = i < len - 1\n          ? heatmapColorConfig[i + 1][0]\n          : Number.MAX_SAFE_INTEGER\n\n        if (count >= minTask && count < maxTask) {\n          color = heatmapColorConfig[i][1]\n          break\n        }\n      }\n      return color || this.defaultColor\n    },\n    randomizeDelay () {\n      return (Math.random() ** 4) * 5000\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@keyframes rotatingRect {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n.monthly-heatmap {\n  max-width: 200px;\n  @apply inline-flex flex-col justify-between items-stretch;\n\n  &__blocks {\n    display: inline;\n    @apply w-full;\n  }\n\n  &__block {\n    transform-origin: 0 0;\n    @apply border-none bg-transparent;\n\n    &__rect {\n      transform-origin: center;\n      transform-box: fill-box;\n      cursor: pointer;\n      @apply border-none stroke-0;\n\n      &:hover {\n        stroke: rgb(0, 0, 0, 0.2);\n        stroke-width: 6;\n      }\n\n      &.is-loading {\n        animation: rotatingRect 1s infinite alternate ease-out;\n      }\n    }\n  }\n\n  &__month-name {\n    @apply block mb-2\n    text-left text-sm\n    text-green-600 font-bold;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/Dashboard/LogbookHeatmaps"}]}