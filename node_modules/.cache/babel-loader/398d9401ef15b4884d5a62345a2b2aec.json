{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/events-list.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/events-list.js","mtime":1673491775271},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2pkcy9Eb2N1bWVudHMvZGlza29taW5mby9qZHMvZGlnaXRlYW0vZ3JvdXB3YXJlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvamRzL0RvY3VtZW50cy9kaXNrb21pbmZvL2pkcy9kaWdpdGVhbS9ncm91cHdhcmUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCnZhciBfbXV0YXRpb25zOwoKaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vbXV0YXRpb24tdHlwZXMnOwppbXBvcnQgeyBkYiB9IGZyb20gJ0AvbGliL2ZpcmViYXNlJzsKaW1wb3J0IHsgc3RhcnRPZkRheSB9IGZyb20gJ2RhdGUtZm5zJzsgLy8gc3RhdGUKCmV4cG9ydCB2YXIgc3RhdGUgPSB7CiAgbG9hZGluZzogdHJ1ZSwKICBpdGVtczogW10KfTsgLy8gZ2V0dGVycwoKZXhwb3J0IHZhciBnZXR0ZXJzID0gewogIGxvYWRpbmc6IGZ1bmN0aW9uIGxvYWRpbmcoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5sb2FkaW5nOwogIH0sCiAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuaXRlbXM7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCmV4cG9ydCB2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIHR5cGVzLkVWRU5UU19JTklULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCB0eXBlcy5FVkVOVFNfTE9BREVELCBmdW5jdGlvbiAoc3RhdGUsIF9yZWYpIHsKICB2YXIgaXRlbXMgPSBfcmVmLml0ZW1zOwogIHN0YXRlLml0ZW1zID0gaXRlbXM7CiAgc3RhdGUubG9hZGluZyA9IGZhbHNlOwp9KSwgX211dGF0aW9ucyk7IC8vIGFjdGlvbnMKCmV4cG9ydCB2YXIgYWN0aW9ucyA9IHsKICBmZXRjaEl0ZW1zOiBmdW5jdGlvbiBmZXRjaEl0ZW1zKF9yZWYyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCB0b2RheSwgdG9kYXlNaWRuaWdodCwgcXVlcnlTbmFwc2hvdCwgZG9jdW1lbnRzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIHRvZGF5ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICB0b2RheU1pZG5pZ2h0ID0gc3RhcnRPZkRheSh0b2RheSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oJ2V2ZW50cycpLndoZXJlKCdzdGFydF9kYXRldGltZScsICc+PScsIHRvZGF5TWlkbmlnaHQpLm9yZGVyQnkoJ3N0YXJ0X2RhdGV0aW1lJykubGltaXQoMjApLmdldCgpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHF1ZXJ5U25hcHNob3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRvY3VtZW50cyA9IHF1ZXJ5U25hcHNob3QuZG9jcy5tYXAoZnVuY3Rpb24gKGRvYykgewogICAgICAgICAgICAgICAgcmV0dXJuIGRvYy5kYXRhKCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29tbWl0KHR5cGVzLkVWRU5UU19MT0FERUQsIHsKICAgICAgICAgICAgICAgIGl0ZW1zOiBkb2N1bWVudHMKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/events-list.js"],"names":["types","db","startOfDay","state","loading","items","getters","mutations","EVENTS_INIT","EVENTS_LOADED","actions","fetchItems","commit","today","Date","todayMidnight","collection","where","orderBy","limit","get","querySnapshot","documents","docs","map","doc","data"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAAd,C,CAKP;;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBF,EAAAA,OAAO,EAAE,iBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GADO;AAErBC,EAAAA,KAAK,EAAE,eAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,KAAV;AAAA;AAFS,CAAhB,C,CAKP;;AACA,OAAO,IAAME,SAAS,iDACnBP,KAAK,CAACQ,WADa,YACCL,KADD,EACQ;AAC1BA,EAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACD,CAHmB,+BAKnBJ,KAAK,CAACS,aALa,YAKGN,KALH,QAKqB;AAAA,MAATE,KAAS,QAATA,KAAS;AACvCF,EAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACAF,EAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACD,CARmB,cAAf,C,CAWP;;AACA,OAAO,IAAMM,OAAO,GAAG;AACfC,EAAAA,UADe,6BACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,SAAVA,MAAU;AACtBC,cAAAA,KADsB,GACd,IAAIC,IAAJ,EADc;AAEtBC,cAAAA,aAFsB,GAENb,UAAU,CAACW,KAAD,CAFJ;AAAA;AAAA,qBAIAZ,EAAE,CAACe,UAAH,CAAc,QAAd,EACzBC,KADyB,CACnB,gBADmB,EACD,IADC,EACKF,aADL,EAEzBG,OAFyB,CAEjB,gBAFiB,EAGzBC,KAHyB,CAGnB,EAHmB,EAIzBC,GAJyB,EAJA;;AAAA;AAItBC,cAAAA,aAJsB;AAUtBC,cAAAA,SAVsB,GAUVD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAA1B,CAVU;AAY5Bd,cAAAA,MAAM,CAACZ,KAAK,CAACS,aAAP,EAAsB;AAAEJ,gBAAAA,KAAK,EAAEiB;AAAT,eAAtB,CAAN;;AAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa7B;AAdoB,CAAhB","sourcesContent":["import * as types from '../mutation-types'\nimport { db } from '@/lib/firebase'\nimport { startOfDay } from 'date-fns'\n\n// state\nexport const state = {\n  loading: true,\n  items: []\n}\n\n// getters\nexport const getters = {\n  loading: state => state.loading,\n  items: state => state.items\n}\n\n// mutations\nexport const mutations = {\n  [types.EVENTS_INIT] (state) {\n    state.loading = true\n  },\n\n  [types.EVENTS_LOADED] (state, { items }) {\n    state.items = items\n    state.loading = false\n  }\n}\n\n// actions\nexport const actions = {\n  async fetchItems ({ commit }) {\n    const today = new Date()\n    const todayMidnight = startOfDay(today)\n\n    const querySnapshot = await db.collection('events')\n      .where('start_datetime', '>=', todayMidnight)\n      .orderBy('start_datetime')\n      .limit(20)\n      .get()\n\n    const documents = querySnapshot.docs.map(doc => doc.data())\n\n    commit(types.EVENTS_LOADED, { items: documents })\n  }\n}\n"]}]}