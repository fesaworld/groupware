{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js??ref--14-0!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/auth.js","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/auth.js","mtime":1673512536613},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/eslint-loader/index.js","mtime":1673491969842}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/store/modules/auth.js"],"names":["addHours","types","GroupwareAPI","setToken","setTokenInCookie","setRefreshTokenInCookie","getIdFromUrl","googleDriveUrl","state","loading","user","getters","check","isInitialized","mutations","AUTH_LOADING","AUTH_INITIALIZED","SET_USER","UNAUTHENTICATED","actions","onLoginSuccess","commit","dispatch","token","expiredAt","refreshToken","expires","Date","onLoginFailed","loginUsingUsernameAndPassword","username","password","post","then","r","data","auth_token","exp","refresh_token","catch","err","login","window","GAuth","getAuthCode","authCode","access_token","headers","finally","getUserProfile","get","profile","urlPhoto","uri","photo","name","nama_lengkap","jabatan","email","logout","signOut","location","reload"],"mappings":"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","sourcesContent":["import addHours from 'date-fns/addHours'\nimport * as types from '../mutation-types'\nimport { GroupwareAPI, setToken } from '../../lib/axios'\nimport { setTokenInCookie, setRefreshTokenInCookie } from '../../lib/js-cookie'\nimport { getIdFromUrl, googleDriveUrl } from '../../lib/string'\n// state\nexport const state = {\n  loading: true,\n  user: null\n}\n\n// getters\nexport const getters = {\n  loading: state => state.loading,\n  user: state => state.user,\n  check: state => state.user !== null,\n  isInitialized: state => state.loading\n}\n\n// mutations\nexport const mutations = {\n  [types.AUTH_LOADING] (state) {\n    state.loading = true\n  },\n\n  [types.AUTH_INITIALIZED] (state) {\n    state.loading = false\n  },\n\n  [types.SET_USER] (state, { user }) {\n    state.user = user\n  },\n\n  [types.UNAUTHENTICATED] (state) {\n    state.loading = false\n    state.user = null\n  }\n}\n\nexport const actions = {\n  async onLoginSuccess ({ commit, dispatch }, { token, expiredAt, refreshToken }) {\n    if (token) {\n      setToken(token)\n      setTokenInCookie(token, {\n        expires: addHours(new Date(), 24)\n      })\n      setRefreshTokenInCookie(refreshToken)\n      await dispatch('getUserProfile')\n    } else {\n      await dispatch('onLoginFailed')\n    }\n  },\n  onLoginFailed ({ commit }) {\n    setToken(null)\n    setTokenInCookie(null)\n    setRefreshTokenInCookie(null)\n    commit(types.UNAUTHENTICATED)\n  },\n  async loginUsingUsernameAndPassword ({ commit, dispatch }, { username, password }) {\n    await GroupwareAPI.post('/auth/login/', {\n      username,\n      password\n    }).then(r => r.data)\n      .then(({ auth_token: token, exp: expiredAt, refresh_token: refreshToken }) => {\n        return dispatch('onLoginSuccess', {\n          token,\n          expiredAt,\n          refreshToken\n        })\n      })\n      .catch((err) => {\n        dispatch('onLoginFailed')\n        throw err\n      })\n    commit(types.AUTH_INITIALIZED)\n  },\n  async login ({ commit, dispatch }) {\n    if (!window.GAuth) {\n      return\n    }\n    commit(types.AUTH_LOADING)\n    const authCode = await window.GAuth.getAuthCode()\n    await GroupwareAPI.post(`social/google-oauth2/`, {\n      access_token: authCode\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.data)\n      .then(({ auth_token: token, exp: expiredAt, refresh_token: refreshToken }) => {\n        return dispatch('onLoginSuccess', {\n          token,\n          expiredAt,\n          refreshToken\n        })\n      })\n      .catch((err) => {\n        dispatch('onLoginFailed')\n        throw err\n      })\n      .finally(() => {\n        commit(types.AUTH_INITIALIZED)\n      })\n  },\n  async getUserProfile ({ state, commit }) {\n    if (!state.user) {\n      await GroupwareAPI.get('/user/info')\n        .then(r => r.data.data)\n        .then(profile => {\n          let urlPhoto\n          const uri = getIdFromUrl(profile.photo)\n          if (uri) {\n            urlPhoto = `${googleDriveUrl}${uri}&sz=w{{200}}-h{{100}}`\n          }\n          commit(types.SET_USER, {\n            user: {\n              ...profile,\n              name: profile.nama_lengkap,\n              jabatan: profile.jabatan,\n              email: profile.email,\n              photo: urlPhoto\n            }\n          })\n        })\n    }\n    return state.user\n  },\n  async logout () {\n    if (!window.GAuth) {\n      return\n    }\n    await window.GAuth.signOut()\n    setToken(null)\n    setTokenInCookie(null)\n    setRefreshTokenInCookie(null)\n    await window.location.reload()\n  }\n}\n"]}]}