{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/components/LogbookList/table.vue?vue&type=style&index=0&id=86bcdbac&lang=scss&scoped=true&","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/components/LogbookList/table.vue","mtime":1673745153935},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/css-loader/dist/cjs.js","mtime":1673491970692},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1673491936529},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/postcss-loader/src/index.js","mtime":1673491966590},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/sass-loader/dist/cjs.js","mtime":1673491959555},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js","mtime":1673491936504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxvZ2Jvb2stdGFibGUgewogIEBhcHBseSB3LWZ1bGwgdGV4dC1zbSBzZWxlY3QtdGV4dCBvdmVyZmxvdy1hdXRvOwoKICB0aCB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgJjpub3QoW2NsYXNzKj0icHgtMCJdKSB7CiAgICAgIEBhcHBseSBweC00OwogICAgfQogICAgJjpub3QoW2NsYXNzKj0icHktMCJdKSB7CiAgICAgIEBhcHBseSBweS0yOwogICAgfQogIH0KCiAgdGggewogICAgQGFwcGx5IGJvcmRlci10LTIgYm9yZGVyLWItMgogICAgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTMwMAogICAgdGV4dC1sZWZ0CiAgICB0ZXh0LXhzCiAgICB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXI7CiAgfQp9CgouaGVhZGVyLWFjdGlvbi1idXR0b24gewogIEBhcHBseSBoLTggbXgtMSBweC0zIHB5LTEgcm91bmRlZCB0ZXh0LXdoaXRlOwoKICA+ICpbY2xhc3MqPSJmYS0iXSB7CiAgICBAYXBwbHkgbXItMTsKICB9CgogICY6aG92ZXIsCiAgJjpmb2N1cyB7CiAgICBAYXBwbHkgb3V0bGluZS1ub25lIG9wYWNpdHktNTA7CiAgfQp9Cg=="},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"table.vue","sourceRoot":"src/components/LogbookList","sourcesContent":["<template>\n  <div>\n    <TableFilter\n      class=\"mb-8\"\n      :filter=\"tableFilter\"\n      @change=\"onFilterChanged\"\n    />\n    <header class=\"mb-4 flex justify-between items-center\">\n      <p class=\"text-sm text-gray-600 dark:text-white\">\n        <template v-if=\"totalCount\">\n          Menampilkan {{ startIndex + 1 }} - {{ endIndex + 1 }} dari total {{ totalCount }} data\n        </template>\n      </p>\n      <p>\n        <button\n          v-if=\"isCheckinState\"\n          class=\"header-action-button bg-blue-500\"\n          @click=\"onCreateNewLogbook\">\n          + Buat Laporan Baru\n        </button>\n        <strong\n          v-else\n          class=\"p-2 my-0 rounded-md border border-solid border-orange-500 bg-orange-100\">\n          <span class=\"text-orange-700\">Silahkan Checkin untuk Buat Laporan</span>\n        </strong>\n      </p>\n    </header>\n    <div class=\"overflow-x-auto overflow-y-hidden\">\n      <table class=\"logbook-table text-gray-600 dark:text-white\">\n        <thead>\n          <tr>\n            <th style=\"width: 1%;\">No.</th>\n            <th style=\"width: 1%;\">Tanggal</th>\n            <th style=\"width: 1%;\">Project</th>\n            <th style=\"width: 50%;\">Task</th>\n            <th style=\"width: 1%;\">Tupoksi</th>\n            <th style=\"width: 1%;\">Foto Kegiatan</th>\n            <th style=\"width: 1%;\">Lampiran</th>\n            <th style=\"width: 1%;\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <template v-if=\"isLoadingLogbookList\">\n            <tr v-for=\"i in mQuery.perPage\" :key=\"`skeleton:${i}`\">\n              <td v-for=\"j in 8\" :key=\"`col:${j}`\" class=\"p-4\">\n                <div class=\"w-full h-2 rounded-full bg-shimmering\" />\n              </td>\n            </tr>\n          </template>\n          <template v-else-if=\"!logbookListData || !logbookListData.length\">\n            <tr>\n              <td colspan=\"8\">\n                <div class=\"p-4 text-center font-bold text-gray-400 bg-gray-200 dark:bg-gray-800 uppercase\">\n                  Tidak ada data\n                </div>\n              </td>\n            </tr>\n          </template>\n          <template v-else>\n            <TableRow\n              v-for=\"(data, index) in logbookListData\"\n              :key=\"index\"\n              :logbook=\"data\"\n              :index=\"getAbsoluteIndex(index)\"\n              @delete:success=\"loadData\">\n            </TableRow>\n          </template>\n        </tbody>\n    </table>\n    </div>\n    <div class=\"v-pagination-container mt-4\">\n      <Pagination v-bind=\"pagination\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Pagination from '../Pagination'\nimport listMixin from './list-mixin'\nimport TableFilter from './table-filter'\nimport TableRow from './table-row'\nimport _isEqual from 'lodash/isEqual'\n\nexport default {\n  name: 'LogbookTable',\n  mixins: [listMixin],\n  components: {\n    Pagination,\n    TableFilter,\n    TableRow\n  },\n  props: {\n    query: {\n      type: Object,\n      default: () => null\n    }\n  },\n  data () {\n    return {\n      isLoadingLogbookList: true,\n      logbookListError: null,\n      logbookListData: null,\n      totalPage: 0,\n      totalCount: 0,\n\n      mQuery: {\n        page: 1,\n        perPage: 10,\n        startDate: null,\n        endDate: null\n      }\n    }\n  },\n  computed: {\n    tableFilter () {\n      return {\n        startDate: this.mQuery.startDate,\n        endDate: this.mQuery.endDate,\n        perPage: this.mQuery.perPage\n      }\n    },\n    isCheckinState () {\n      return this.$store.state['checkins-list'].isCheckin\n    },\n    startIndex () {\n      if (this.totalCount) {\n        return (this.mQuery.page - 1) * (this.mQuery.perPage)\n      }\n      return 0\n    },\n    endIndex () {\n      if (this.totalCount) {\n        if (this.mQuery.page === Math.ceil(this.totalCount / this.mQuery.perPage)) {\n          return this.totalCount - 1\n        } else {\n          return this.startIndex + this.logbookListData.length - 1\n        }\n      }\n      return 0\n    },\n    pagination () {\n      return {\n        value: this.mQuery.page,\n        pageCount: this.totalPage,\n        pageRange: 3,\n        clickHandler: this.onPageChanged,\n        firstLastButton: true\n      }\n    }\n  },\n  watch: {\n    query: {\n      immediate: true,\n      deep: true,\n      handler (newObject, oldObject) {\n        if (_isEqual(newObject, oldObject)) {\n          return\n        }\n\n        const {\n          page = 1,\n          perPage = 10,\n          startDate = null,\n          endDate = null\n        } = (newObject || {})\n        this.updateQuery({\n          page,\n          perPage,\n          startDate,\n          endDate\n        }, {\n          sync: false\n        })\n      }\n    }\n  },\n  methods: {\n    updateQuery ({\n      page,\n      perPage,\n      startDate,\n      endDate\n    }, {\n      sync = true\n    } = {}) {\n      this.mQuery = {\n        page,\n        perPage,\n        startDate,\n        endDate\n      }\n      if (sync) {\n        this.$emit('update:query', this.mQuery)\n      } else {\n        this.loadData()\n      }\n    },\n    getQueryAsAPISpec () {\n      const { page, perPage, startDate, endDate } = this.mQuery\n      return {\n        page,\n        pageSize: perPage,\n        start_date: startDate,\n        end_date: endDate\n      }\n    },\n    onFilterChanged ({ startDate, endDate, perPage } = {}) {\n      this.updateQuery({\n        page: 1,\n        startDate,\n        endDate,\n        perPage\n      })\n      this.totalCount = 0\n      this.totalPage = 0\n    },\n    onPageChanged (newPage) {\n      this.updateQuery({\n        ...this.mQuery,\n        page: newPage\n      })\n    },\n    onLoadSuccess ({ results, _meta }) {\n      const { totalPage, totalCount } = _meta\n      this.totalPage = totalPage\n      this.totalCount = totalCount\n      this.logbookListData = results\n    },\n    onLoadError (err) {\n      this.logbookListError = err\n    },\n    onLoadFinished () {\n      this.isLoadingLogbookList = false\n    },\n    loadData () {\n      this.isLoadingLogbookList = true\n      this.logbookListError = null\n\n      const params = this.getQueryAsAPISpec()\n      this.$store.dispatch('logbook-list/getLogbookList', params)\n        .then(this.onLoadSuccess)\n        .catch(this.onLoadError)\n        .finally(this.onLoadFinished)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.logbook-table {\n  @apply w-full text-sm select-text overflow-auto;\n\n  th {\n    vertical-align: top;\n    &:not([class*=\"px-0\"]) {\n      @apply px-4;\n    }\n    &:not([class*=\"py-0\"]) {\n      @apply py-2;\n    }\n  }\n\n  th {\n    @apply border-t-2 border-b-2\n    border-solid border-gray-300\n    text-left\n    text-xs\n    uppercase tracking-wider;\n  }\n}\n\n.header-action-button {\n  @apply h-8 mx-1 px-3 py-1 rounded text-white;\n\n  > *[class*=\"fa-\"] {\n    @apply mr-1;\n  }\n\n  &:hover,\n  &:focus {\n    @apply outline-none opacity-50;\n  }\n}\n</style>\n"]}]}