{"remainingRequest":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/src/App.vue","mtime":1673491775258},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/babel-loader/lib/index.js","mtime":1673491971758},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/cache-loader/dist/cjs.js","mtime":1673491971474},{"path":"/Users/jds/Documents/diskominfo/jds/digiteam/groupware/node_modules/vue-loader/lib/index.js","mtime":1673491936504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBMb2FkaW5nIGZyb20gJy4vY29tcG9uZW50cy9Mb2FkaW5nJwoKLy8gTG9hZCBsYXlvdXQgY29tcG9uZW50cyBkeW5hbWljYWxseS4KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnCgpjb25zdCByZXF1aXJlQ29udGV4dCA9IHJlcXVpcmUuY29udGV4dCgnQC9sYXlvdXRzJywgZmFsc2UsIC8uKlwudnVlJC8pCgpjb25zdCBsYXlvdXRzID0gcmVxdWlyZUNvbnRleHQua2V5cygpCiAgLm1hcChmaWxlID0+CiAgICBbZmlsZS5yZXBsYWNlKC8oXi5cLyl8KFwudnVlJCkvZywgJycpLCByZXF1aXJlQ29udGV4dChmaWxlKV0KICApCiAgLnJlZHVjZSgoY29tcG9uZW50cywgW25hbWUsIGNvbXBvbmVudF0pID0+IHsKICAgIGNvbXBvbmVudHNbbmFtZV0gPSBjb21wb25lbnQuZGVmYXVsdCB8fCBjb21wb25lbnQKICAgIHJldHVybiBjb21wb25lbnRzCiAgfSwge30pCgpleHBvcnQgZGVmYXVsdCB7CiAgZWw6ICcjYXBwJywKCiAgY29tcG9uZW50czogewogICAgLy8gTG9hZGluZwogIH0sCgogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbGF5b3V0OiBudWxsLAogICAgICBkZWZhdWx0TGF5b3V0OiAnZGVmYXVsdCcsCiAgICAgIGFsZXJ0VXBkYXRlOiBmYWxzZSwKICAgICAgcmVmcmVzaGluZzogZmFsc2UsCiAgICAgIHJlZ2lzdHJhdGlvbjogbnVsbAogICAgfQogIH0sCgogIG1vdW50ZWQgKCkgewogICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdsb2FkaW5nJykKCiAgICAvLyBMaXN0ZW4gZm9yIHN3VXBkYXRlZCBldmVudCBhbmQgZGlzcGxheSByZWZyZXNoIHNuYWNrYmFyIGFzIHJlcXVpcmVkLgogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3dVcGRhdGVkJywgdGhpcy5zaG93UmVmcmVzaFVJLCB7IG9uY2U6IHRydWUgfSkKCiAgICAvLyBSZWZyZXNoIGFsbCBvcGVuIGFwcCB0YWJzIHdoZW4gYSBuZXcgc2VydmljZSB3b3JrZXIgaXMgaW5zdGFsbGVkLgogICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuYWRkRXZlbnRMaXN0ZW5lcignY29udHJvbGxlcmNoYW5nZScsICgpID0+IHsKICAgICAgaWYgKHRoaXMucmVmcmVzaGluZykgcmV0dXJuCiAgICAgIHRoaXMucmVmcmVzaGluZyA9IHRydWUKICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpCiAgICB9KQogIH0sCgogIGNvbXB1dGVkOiBtYXBHZXR0ZXJzKHsKICAgIGxvYWRpbmc6ICdhdXRoL2xvYWRpbmcnCiAgfSksCgogIHdhdGNoOiB7CiAgICBsb2FkaW5nICh2YWx1ZSkgewogICAgICBpZiAodmFsdWUgPT09IGZhbHNlKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkaW5nJykKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3BsYXNoU2NyZWVuJykuc3R5bGUuc2V0UHJvcGVydHkoJ2Rpc3BsYXknLCAnbm9uZScpCiAgICAgIH0KICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIFNldCB0aGUgYXBwbGljYXRpb24gbGF5b3V0LgogICAgICoKICAgICAqIEBwYXJhbSB7U3RyaW5nfSBsYXlvdXQKICAgICAqLwogICAgc2V0TGF5b3V0IChsYXlvdXQpIHsKICAgICAgaWYgKCFsYXlvdXQgfHwgIWxheW91dHNbbGF5b3V0XSkgewogICAgICAgIGxheW91dCA9IHRoaXMuZGVmYXVsdExheW91dAogICAgICB9CgogICAgICB0aGlzLmxheW91dCA9IGxheW91dHNbbGF5b3V0XQogICAgfSwKCiAgICBzaG93UmVmcmVzaFVJIChlKSB7CiAgICAgIC8vIERpc3BsYXkgYSBzbmFja2JhciBpbnZpdGluZyB0aGUgdXNlciB0byByZWZyZXNoL3JlbG9hZCB0aGUgYXBwIGR1ZQogICAgICAvLyB0byBhbiBhcHAgdXBkYXRlIGJlaW5nIGF2YWlsYWJsZS4KICAgICAgLy8gVGhlIG5ldyBzZXJ2aWNlIHdvcmtlciBpcyBpbnN0YWxsZWQsIGJ1dCBub3QgeWV0IGFjdGl2ZS4KICAgICAgLy8gU3RvcmUgdGhlIFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24gaW5zdGFuY2UgZm9yIGxhdGVyIHVzZS4KICAgICAgdGhpcy5yZWdpc3RyYXRpb24gPSBlLmRldGFpbAoKICAgICAgdGhpcy5hbGVydFVwZGF0ZSA9IHRydWUKICAgIH0sCgogICAgcmVmcmVzaEFwcCAoKSB7CiAgICAgIHRoaXMuYWxlcnRVcGRhdGUgPSBmYWxzZQogICAgICAvLyBQcm90ZWN0IGFnYWluc3QgbWlzc2luZyByZWdpc3RyYXRpb24ud2FpdGluZy4KICAgICAgaWYgKCF0aGlzLnJlZ2lzdHJhdGlvbiB8fCAhdGhpcy5yZWdpc3RyYXRpb24ud2FpdGluZykgeyByZXR1cm4gfQogICAgICB0aGlzLnJlZ2lzdHJhdGlvbi53YWl0aW5nLnBvc3RNZXNzYWdlKCdza2lwV2FpdGluZycpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n<!--    <loading ref=\"loading\" />-->\n    <div v-if=\"alertUpdate\" class=\"bg-brand-yellow-darkest\">\n      <div class=\"container mx-auto\">\n        <div class=\"flex px-6 py-4\">\n          <div class=\"text-sm w-full\">\n            Ada update versi terbaru.\n            <button @click=\"refreshApp\" class=\"ml-2 bg-brand-blue text-white font-bold py-1 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <template v-if=\"!loading\">\n      <transition name=\"page\" mode=\"out-in\">\n        <component :is=\"layout\" v-if=\"layout\" />\n      </transition>\n    </template>\n  </div>\n</template>\n\n<script>\n// import Loading from './components/Loading'\n\n// Load layout components dynamically.\nimport { mapGetters } from 'vuex'\n\nconst requireContext = require.context('@/layouts', false, /.*\\.vue$/)\n\nconst layouts = requireContext.keys()\n  .map(file =>\n    [file.replace(/(^.\\/)|(\\.vue$)/g, ''), requireContext(file)]\n  )\n  .reduce((components, [name, component]) => {\n    components[name] = component.default || component\n    return components\n  }, {})\n\nexport default {\n  el: '#app',\n\n  components: {\n    // Loading\n  },\n\n  data () {\n    return {\n      layout: null,\n      defaultLayout: 'default',\n      alertUpdate: false,\n      refreshing: false,\n      registration: null\n    }\n  },\n\n  mounted () {\n    document.body.classList.add('loading')\n\n    // Listen for swUpdated event and display refresh snackbar as required.\n    document.addEventListener('swUpdated', this.showRefreshUI, { once: true })\n\n    // Refresh all open app tabs when a new service worker is installed.\n    navigator.serviceWorker.addEventListener('controllerchange', () => {\n      if (this.refreshing) return\n      this.refreshing = true\n      window.location.reload()\n    })\n  },\n\n  computed: mapGetters({\n    loading: 'auth/loading'\n  }),\n\n  watch: {\n    loading (value) {\n      if (value === false) {\n        document.body.classList.remove('loading')\n        document.getElementById('splashScreen').style.setProperty('display', 'none')\n      }\n    }\n  },\n\n  methods: {\n    /**\n     * Set the application layout.\n     *\n     * @param {String} layout\n     */\n    setLayout (layout) {\n      if (!layout || !layouts[layout]) {\n        layout = this.defaultLayout\n      }\n\n      this.layout = layouts[layout]\n    },\n\n    showRefreshUI (e) {\n      // Display a snackbar inviting the user to refresh/reload the app due\n      // to an app update being available.\n      // The new service worker is installed, but not yet active.\n      // Store the ServiceWorkerRegistration instance for later use.\n      this.registration = e.detail\n\n      this.alertUpdate = true\n    },\n\n    refreshApp () {\n      this.alertUpdate = false\n      // Protect against missing registration.waiting.\n      if (!this.registration || !this.registration.waiting) { return }\n      this.registration.waiting.postMessage('skipWaiting')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './styles/app.scss';\n</style>\n"]}]}